{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents\\\\warehouse-dashboard\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// File: Dashboard.js\n// Mô tả: Component React chính hiển thị dashboard quản lý kho hàng.\n// Chức năng: Quản lý trạng thái, lọc, thống kê, hiển thị lưới kệ, chi tiết kệ, và đồng bộ dữ liệu mock cho toàn bộ hệ thống.\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { subscribeToShelfUpdates } from '../utils/mqtt';\nimport './Dashboard.css';\nimport ShelfGrid from '../components/ShelfGrid/ShelfGrid';\nimport FilterPanel from '../components/FilterPanel/FilterPanel';\nimport ShelfDetail from '../components/ShelfDetail/ShelfDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  const [shelves, setShelves] = useState([]);\n  const [filteredShelves, setFilteredShelves] = useState([]);\n  const [selectedShelf, setSelectedShelf] = useState(null);\n  const [filters, setFilters] = useState({\n    tier: 'all',\n    status: 'all'\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Áp dụng bộ lọc, an toàn với dữ liệu thiếu\n  const applyFilters = (shelfList, currentFilters) => {\n    return (Array.isArray(shelfList) ? shelfList : []).filter(shelf => {\n      const tierMatch = currentFilters.tier === 'all' || String(shelf.tier) === String(currentFilters.tier);\n      const statusMatch = currentFilters.status === 'all' || shelf.status && shelf.status === currentFilters.status;\n      return tierMatch && statusMatch;\n    });\n  };\n\n  // Load dữ liệu ban đầu\n  useEffect(() => {\n    const fetchShelves = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/shelves', {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch shelves');\n        }\n        const data = await response.json();\n        setShelves(data);\n        setFilteredShelves(data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchShelves();\n  }, []);\n\n  // Subscribe to shelf updates\n  useEffect(() => {\n    const unsubscribe = subscribeToShelfUpdates(update => {\n      setShelves(prevShelves => {\n        const newShelves = prevShelves.map(s => s.tier === update.tier && s.tray === update.tray ? {\n          ...s,\n          ...update\n        } : s);\n        const filtered = applyFilters(newShelves, filters);\n        setFilteredShelves(filtered);\n        return newShelves;\n      });\n    });\n    return () => {\n      if (unsubscribe) unsubscribe();\n    };\n  }, [filters]);\n\n  // Xử lý thay đổi bộ lọc\n  const handleFilterChange = newFilters => {\n    setFilters(newFilters);\n    // Lọc kệ hàng dựa trên bộ lọc mới\n    const filtered = shelves.filter(shelf => {\n      if (newFilters.tier !== 'all' && shelf.tier !== parseInt(newFilters.tier)) {\n        return false;\n      }\n      if (newFilters.status !== 'all' && shelf.status !== newFilters.status) {\n        return false;\n      }\n      return true;\n    });\n    setFilteredShelves(filtered);\n  };\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"\\u0110ang t\\u1EA3i d\\u1EEF li\\u1EC7u...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"L\\u1ED7i: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Qu\\u1EA3n l\\xFD kho h\\xE0ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: (user === null || user === void 0 ? void 0 : user.username) || 'Admin'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-button\",\n          children: \"\\u0110\\u0103ng xu\\u1EA5t\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FilterPanel, {\n      tiers: [...new Set(shelves.map(s => s.tier))].sort(),\n      statuses: ['HIGH', 'MEDIUM', 'EMPTY'],\n      filters: filters,\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ShelfGrid, {\n      shelves: filteredShelves,\n      onShelfClick: setSelectedShelf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), selectedShelf && /*#__PURE__*/_jsxDEV(ShelfDetail, {\n      shelf: selectedShelf,\n      onClose: () => setSelectedShelf(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"wAxWi8KEEY/z0s6GQ+qjyJyW3mU=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","subscribeToShelfUpdates","ShelfGrid","FilterPanel","ShelfDetail","jsxDEV","_jsxDEV","Dashboard","_s","user","logout","navigate","shelves","setShelves","filteredShelves","setFilteredShelves","selectedShelf","setSelectedShelf","filters","setFilters","tier","status","loading","setLoading","error","setError","applyFilters","shelfList","currentFilters","Array","isArray","filter","shelf","tierMatch","String","statusMatch","fetchShelves","response","fetch","headers","localStorage","getItem","ok","Error","data","json","err","message","unsubscribe","update","prevShelves","newShelves","map","s","tray","filtered","handleFilterChange","newFilters","parseInt","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","onClick","tiers","Set","sort","statuses","onFilterChange","onShelfClick","onClose","_c","$RefreshReg$"],"sources":["C:/Documents/warehouse-dashboard/src/pages/Dashboard.js"],"sourcesContent":["// File: Dashboard.js\r\n// Mô tả: Component React chính hiển thị dashboard quản lý kho hàng.\r\n// Chức năng: Quản lý trạng thái, lọc, thống kê, hiển thị lưới kệ, chi tiết kệ, và đồng bộ dữ liệu mock cho toàn bộ hệ thống.\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { subscribeToShelfUpdates } from '../utils/mqtt';\r\nimport './Dashboard.css';\r\nimport ShelfGrid from '../components/ShelfGrid/ShelfGrid';\r\nimport FilterPanel from '../components/FilterPanel/FilterPanel';\r\nimport ShelfDetail from '../components/ShelfDetail/ShelfDetail';\r\n\r\nconst Dashboard = () => {\r\n    const { user, logout } = useAuth();\r\n    const navigate = useNavigate();\r\n    const [shelves, setShelves] = useState([]);\r\n    const [filteredShelves, setFilteredShelves] = useState([]);\r\n    const [selectedShelf, setSelectedShelf] = useState(null);\r\n    const [filters, setFilters] = useState({ tier: 'all', status: 'all' });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Áp dụng bộ lọc, an toàn với dữ liệu thiếu\r\n    const applyFilters = (shelfList, currentFilters) => {\r\n        return (Array.isArray(shelfList) ? shelfList : []).filter(shelf => {\r\n            const tierMatch = currentFilters.tier === 'all' || String(shelf.tier) === String(currentFilters.tier);\r\n            const statusMatch = currentFilters.status === 'all' || (shelf.status && shelf.status === currentFilters.status);\r\n            return tierMatch && statusMatch;\r\n        });\r\n    };\r\n\r\n    // Load dữ liệu ban đầu\r\n    useEffect(() => {\r\n        const fetchShelves = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/shelves', {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('authToken')}`\r\n                    }\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch shelves');\r\n                }\r\n                const data = await response.json();\r\n                setShelves(data);\r\n                setFilteredShelves(data);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                setError(err.message);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchShelves();\r\n    }, []);\r\n\r\n    // Subscribe to shelf updates\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToShelfUpdates((update) => {\r\n            setShelves(prevShelves => {\r\n                const newShelves = prevShelves.map(s =>\r\n                    s.tier === update.tier && s.tray === update.tray\r\n                        ? { ...s, ...update }\r\n                        : s\r\n                );\r\n                const filtered = applyFilters(newShelves, filters);\r\n                setFilteredShelves(filtered);\r\n                return newShelves;\r\n            });\r\n        });\r\n\r\n        return () => {\r\n            if (unsubscribe) unsubscribe();\r\n        };\r\n    }, [filters]);\r\n\r\n    // Xử lý thay đổi bộ lọc\r\n    const handleFilterChange = (newFilters) => {\r\n        setFilters(newFilters);\r\n        // Lọc kệ hàng dựa trên bộ lọc mới\r\n        const filtered = shelves.filter(shelf => {\r\n            if (newFilters.tier !== 'all' && shelf.tier !== parseInt(newFilters.tier)) {\r\n                return false;\r\n            }\r\n            if (newFilters.status !== 'all' && shelf.status !== newFilters.status) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        setFilteredShelves(filtered);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        logout();\r\n        navigate('/login');\r\n    };\r\n\r\n    if (loading) {\r\n        return <div className=\"loading\">Đang tải dữ liệu...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"error\">Lỗi: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <div className=\"dashboard-header\">\r\n                <h1>Quản lý kho hàng</h1>\r\n                <div className=\"user-info\">\r\n                    <span>{user?.username || 'Admin'}</span>\r\n                    <button onClick={handleLogout} className=\"logout-button\">\r\n                        Đăng xuất\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <FilterPanel \r\n                tiers={[...new Set(shelves.map(s => s.tier))].sort()}\r\n                statuses={['HIGH', 'MEDIUM', 'EMPTY']}\r\n                filters={filters}\r\n                onFilterChange={handleFilterChange}\r\n            />\r\n            \r\n            <ShelfGrid \r\n                shelves={filteredShelves}\r\n                onShelfClick={setSelectedShelf}\r\n            />\r\n            \r\n            {selectedShelf && (\r\n                <ShelfDetail \r\n                    shelf={selectedShelf}\r\n                    onClose={() => setSelectedShelf(null)}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}