{"ast":null,"code":"import _objectSpread from\"C:/Documents/warehouse-dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// MOCK DATA & API ONLY - KHÔNG GỌI BACKEND NỮA\n// Giả lập danh sách người dùng\nconst users=[{id:1,username:'admin',password:'admin123',email:'admin@example.com'},{id:2,username:'user',password:'user123',email:'user@example.com'}];let currentUser=users[0];const auth={register:async userData=>{if(users.some(u=>u.username===userData.username||u.email===userData.email)){throw new Error('Username hoặc email đã tồn tại');}const newUser=_objectSpread({id:users.length+1},userData);users.push(newUser);return{message:'Đăng ký thành công',user:_objectSpread(_objectSpread({},newUser),{},{password:undefined})};},login:async(username,password)=>{const user=users.find(u=>u.username===username&&u.password===password);if(!user){throw new Error('Tên đăng nhập hoặc mật khẩu không đúng');}currentUser=user;return{token:'mock-token',user:{id:user.id,username:user.username,email:user.email}};},getProfile:async()=>{if(!currentUser)throw new Error('Chưa đăng nhập');return{id:currentUser.id,username:currentUser.username,email:currentUser.email};}};// Giả lập dữ liệu kệ hàng\nfunction generateShelves(){const shelves=[];for(let shelfNum=1;shelfNum<=5;shelfNum++){// 5 kệ hàng\nfor(let tier=1;tier<=3;tier++){for(let tray=1;tray<=5;tray++){const capacity=Math.floor(Math.random()*101);let status;if(capacity>=80)status='HIGH';else if(capacity>=30)status='MEDIUM';else status='EMPTY';shelves.push({shelf:shelfNum,tier,tray,status,capacity,lastUpdated:new Date().toISOString()});}}}return shelves;}let shelvesData=generateShelves();const shelfAPI={fetchAll:async()=>{return shelvesData;},getStats:async()=>{const stats={high:0,medium:0,empty:0};shelvesData.forEach(shelf=>{stats[shelf.status.toLowerCase()]++;});return stats;},subscribeToUpdates:async onUpdate=>{// Giả lập cập nhật ngẫu nhiên mỗi 10s\nconst intervalId=setInterval(()=>{const idx=Math.floor(Math.random()*shelvesData.length);const shelf=shelvesData[idx];// Random capacity\nshelf.capacity=Math.floor(Math.random()*101);if(shelf.capacity>=80)shelf.status='HIGH';else if(shelf.capacity>=30)shelf.status='MEDIUM';else shelf.status='EMPTY';shelf.lastUpdated=new Date().toISOString();onUpdate(_objectSpread({},shelf));},10000);// Trả về hàm unsubscribe\nreturn()=>clearInterval(intervalId);},updateShelf:async(tier,tray,data)=>{// Tìm đúng kệ theo tier, tray và shelf (nếu có)\nconst idx=shelvesData.findIndex(s=>s.tier===tier&&s.tray===tray&&(data.shelf?s.shelf===data.shelf:true));if(idx===-1)throw new Error('Không tìm thấy kệ');shelvesData[idx]=_objectSpread(_objectSpread(_objectSpread({},shelvesData[idx]),data),{},{lastUpdated:new Date().toISOString()});return shelvesData[idx];}};export const authAPI=auth;export const shelf=shelfAPI;export const api={auth,shelf:shelfAPI};","map":{"version":3,"names":["users","id","username","password","email","currentUser","auth","register","userData","some","u","Error","newUser","_objectSpread","length","push","message","user","undefined","login","find","token","getProfile","generateShelves","shelves","shelfNum","tier","tray","capacity","Math","floor","random","status","shelf","lastUpdated","Date","toISOString","shelvesData","shelfAPI","fetchAll","getStats","stats","high","medium","empty","forEach","toLowerCase","subscribeToUpdates","onUpdate","intervalId","setInterval","idx","clearInterval","updateShelf","data","findIndex","s","authAPI","api"],"sources":["C:/Documents/warehouse-dashboard/src/utils/api.js"],"sourcesContent":["\r\n// MOCK DATA & API ONLY - KHÔNG GỌI BACKEND NỮA\r\n\r\n// Giả lập danh sách người dùng\r\nconst users = [\r\n  { id: 1, username: 'admin', password: 'admin123', email: 'admin@example.com' },\r\n  { id: 2, username: 'user', password: 'user123', email: 'user@example.com' }\r\n];\r\n\r\nlet currentUser = users[0];\r\n\r\nconst auth = {\r\n  register: async (userData) => {\r\n    if (users.some(u => u.username === userData.username || u.email === userData.email)) {\r\n      throw new Error('Username hoặc email đã tồn tại');\r\n    }\r\n    const newUser = {\r\n      id: users.length + 1,\r\n      ...userData\r\n    };\r\n    users.push(newUser);\r\n    return { message: 'Đăng ký thành công', user: { ...newUser, password: undefined } };\r\n  },\r\n  login: async (username, password) => {\r\n    const user = users.find(u => u.username === username && u.password === password);\r\n    if (!user) {\r\n      throw new Error('Tên đăng nhập hoặc mật khẩu không đúng');\r\n    }\r\n    currentUser = user;\r\n    return {\r\n      token: 'mock-token',\r\n      user: { id: user.id, username: user.username, email: user.email }\r\n    };\r\n  },\r\n  getProfile: async () => {\r\n    if (!currentUser) throw new Error('Chưa đăng nhập');\r\n    return { id: currentUser.id, username: currentUser.username, email: currentUser.email };\r\n  }\r\n};\r\n\r\n// Giả lập dữ liệu kệ hàng\r\nfunction generateShelves() {\r\n  const shelves = [];\r\n  for (let shelfNum = 1; shelfNum <= 5; shelfNum++) { // 5 kệ hàng\r\n    for (let tier = 1; tier <= 3; tier++) {\r\n      for (let tray = 1; tray <= 5; tray++) {\r\n        const capacity = Math.floor(Math.random() * 101);\r\n        let status;\r\n        if (capacity >= 80) status = 'HIGH';\r\n        else if (capacity >= 30) status = 'MEDIUM';\r\n        else status = 'EMPTY';\r\n        shelves.push({\r\n          shelf: shelfNum,\r\n          tier,\r\n          tray,\r\n          status,\r\n          capacity,\r\n          lastUpdated: new Date().toISOString()\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return shelves;\r\n}\r\n\r\nlet shelvesData = generateShelves();\r\n\r\nconst shelfAPI = {\r\n  fetchAll: async () => {\r\n    return shelvesData;\r\n  },\r\n  getStats: async () => {\r\n    const stats = { high: 0, medium: 0, empty: 0 };\r\n    shelvesData.forEach(shelf => {\r\n      stats[shelf.status.toLowerCase()]++;\r\n    });\r\n    return stats;\r\n  },\r\n  subscribeToUpdates: async (onUpdate) => {\r\n    // Giả lập cập nhật ngẫu nhiên mỗi 10s\r\n    const intervalId = setInterval(() => {\r\n      const idx = Math.floor(Math.random() * shelvesData.length);\r\n      const shelf = shelvesData[idx];\r\n      // Random capacity\r\n      shelf.capacity = Math.floor(Math.random() * 101);\r\n      if (shelf.capacity >= 80) shelf.status = 'HIGH';\r\n      else if (shelf.capacity >= 30) shelf.status = 'MEDIUM';\r\n      else shelf.status = 'EMPTY';\r\n      shelf.lastUpdated = new Date().toISOString();\r\n      onUpdate({ ...shelf });\r\n    }, 10000);\r\n    // Trả về hàm unsubscribe\r\n    return () => clearInterval(intervalId);\r\n  },\r\n  updateShelf: async (tier, tray, data) => {\r\n    // Tìm đúng kệ theo tier, tray và shelf (nếu có)\r\n    const idx = shelvesData.findIndex(s => s.tier === tier && s.tray === tray && (data.shelf ? s.shelf === data.shelf : true));\r\n    if (idx === -1) throw new Error('Không tìm thấy kệ');\r\n    shelvesData[idx] = {\r\n      ...shelvesData[idx],\r\n      ...data,\r\n      lastUpdated: new Date().toISOString()\r\n    };\r\n    return shelvesData[idx];\r\n  }\r\n};\r\n\r\nexport const authAPI = auth;\r\nexport const shelf = shelfAPI;\r\nexport const api = { auth, shelf: shelfAPI };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}