{"ast":null,"code":"'use strict';\n\nconst {\n  Buffer\n} = require('buffer');\nconst Transform = require('readable-stream').Transform;\nconst duplexify = require('duplexify');\n\n/* global wx */\nlet socketTask, proxy, stream;\nfunction buildProxy() {\n  const proxy = new Transform();\n  proxy._write = function (chunk, encoding, next) {\n    socketTask.send({\n      data: chunk.buffer,\n      success: function () {\n        next();\n      },\n      fail: function (errMsg) {\n        next(new Error(errMsg));\n      }\n    });\n  };\n  proxy._flush = function socketEnd(done) {\n    socketTask.close({\n      success: function () {\n        done();\n      }\n    });\n  };\n  return proxy;\n}\nfunction setDefaultOpts(opts) {\n  if (!opts.hostname) {\n    opts.hostname = 'localhost';\n  }\n  if (!opts.path) {\n    opts.path = '/';\n  }\n  if (!opts.wsOptions) {\n    opts.wsOptions = {};\n  }\n}\nfunction buildUrl(opts, client) {\n  const protocol = opts.protocol === 'wxs' ? 'wss' : 'ws';\n  let url = protocol + '://' + opts.hostname + opts.path;\n  if (opts.port && opts.port !== 80 && opts.port !== 443) {\n    url = protocol + '://' + opts.hostname + ':' + opts.port + opts.path;\n  }\n  if (typeof opts.transformWsUrl === 'function') {\n    url = opts.transformWsUrl(url, opts, client);\n  }\n  return url;\n}\nfunction bindEventHandler() {\n  socketTask.onOpen(function () {\n    stream.setReadable(proxy);\n    stream.setWritable(proxy);\n    stream.emit('connect');\n  });\n  socketTask.onMessage(function (res) {\n    let data = res.data;\n    if (data instanceof ArrayBuffer) data = Buffer.from(data);else data = Buffer.from(data, 'utf8');\n    proxy.push(data);\n  });\n  socketTask.onClose(function () {\n    stream.end();\n    stream.destroy();\n  });\n  socketTask.onError(function (res) {\n    stream.destroy(new Error(res.errMsg));\n  });\n}\nfunction buildStream(client, opts) {\n  opts.hostname = opts.hostname || opts.host;\n  if (!opts.hostname) {\n    throw new Error('Could not determine host. Specify host manually.');\n  }\n  const websocketSubProtocol = opts.protocolId === 'MQIsdp' && opts.protocolVersion === 3 ? 'mqttv3.1' : 'mqtt';\n  setDefaultOpts(opts);\n  const url = buildUrl(opts, client);\n  socketTask = wx.connectSocket({\n    url: url,\n    protocols: [websocketSubProtocol]\n  });\n  proxy = buildProxy();\n  stream = duplexify.obj();\n  stream._destroy = function (err, cb) {\n    socketTask.close({\n      success: function () {\n        cb && cb(err);\n      }\n    });\n  };\n  const destroyRef = stream.destroy;\n  stream.destroy = function () {\n    stream.destroy = destroyRef;\n    const self = this;\n    setTimeout(function () {\n      socketTask.close({\n        fail: function () {\n          self._destroy(new Error());\n        }\n      });\n    }, 0);\n  }.bind(stream);\n  bindEventHandler();\n  return stream;\n}\nmodule.exports = buildStream;","map":{"version":3,"names":["Buffer","require","Transform","duplexify","socketTask","proxy","stream","buildProxy","_write","chunk","encoding","next","send","data","buffer","success","fail","errMsg","Error","_flush","socketEnd","done","close","setDefaultOpts","opts","hostname","path","wsOptions","buildUrl","client","protocol","url","port","transformWsUrl","bindEventHandler","onOpen","setReadable","setWritable","emit","onMessage","res","ArrayBuffer","from","push","onClose","end","destroy","onError","buildStream","host","websocketSubProtocol","protocolId","protocolVersion","wx","connectSocket","protocols","obj","_destroy","err","cb","destroyRef","self","setTimeout","bind","module","exports"],"sources":["C:/Documents/warehouse-dashboard/node_modules/mqtt/lib/connect/wx.js"],"sourcesContent":["'use strict'\r\n\r\nconst { Buffer } = require('buffer')\r\nconst Transform = require('readable-stream').Transform\r\nconst duplexify = require('duplexify')\r\n\r\n/* global wx */\r\nlet socketTask, proxy, stream\r\n\r\nfunction buildProxy () {\r\n  const proxy = new Transform()\r\n  proxy._write = function (chunk, encoding, next) {\r\n    socketTask.send({\r\n      data: chunk.buffer,\r\n      success: function () {\r\n        next()\r\n      },\r\n      fail: function (errMsg) {\r\n        next(new Error(errMsg))\r\n      }\r\n    })\r\n  }\r\n  proxy._flush = function socketEnd (done) {\r\n    socketTask.close({\r\n      success: function () {\r\n        done()\r\n      }\r\n    })\r\n  }\r\n\r\n  return proxy\r\n}\r\n\r\nfunction setDefaultOpts (opts) {\r\n  if (!opts.hostname) {\r\n    opts.hostname = 'localhost'\r\n  }\r\n  if (!opts.path) {\r\n    opts.path = '/'\r\n  }\r\n\r\n  if (!opts.wsOptions) {\r\n    opts.wsOptions = {}\r\n  }\r\n}\r\n\r\nfunction buildUrl (opts, client) {\r\n  const protocol = opts.protocol === 'wxs' ? 'wss' : 'ws'\r\n  let url = protocol + '://' + opts.hostname + opts.path\r\n  if (opts.port && opts.port !== 80 && opts.port !== 443) {\r\n    url = protocol + '://' + opts.hostname + ':' + opts.port + opts.path\r\n  }\r\n  if (typeof (opts.transformWsUrl) === 'function') {\r\n    url = opts.transformWsUrl(url, opts, client)\r\n  }\r\n  return url\r\n}\r\n\r\nfunction bindEventHandler () {\r\n  socketTask.onOpen(function () {\r\n    stream.setReadable(proxy)\r\n    stream.setWritable(proxy)\r\n    stream.emit('connect')\r\n  })\r\n\r\n  socketTask.onMessage(function (res) {\r\n    let data = res.data\r\n\r\n    if (data instanceof ArrayBuffer) data = Buffer.from(data)\r\n    else data = Buffer.from(data, 'utf8')\r\n    proxy.push(data)\r\n  })\r\n\r\n  socketTask.onClose(function () {\r\n    stream.end()\r\n    stream.destroy()\r\n  })\r\n\r\n  socketTask.onError(function (res) {\r\n    stream.destroy(new Error(res.errMsg))\r\n  })\r\n}\r\n\r\nfunction buildStream (client, opts) {\r\n  opts.hostname = opts.hostname || opts.host\r\n\r\n  if (!opts.hostname) {\r\n    throw new Error('Could not determine host. Specify host manually.')\r\n  }\r\n\r\n  const websocketSubProtocol =\r\n    (opts.protocolId === 'MQIsdp') && (opts.protocolVersion === 3)\r\n      ? 'mqttv3.1'\r\n      : 'mqtt'\r\n\r\n  setDefaultOpts(opts)\r\n\r\n  const url = buildUrl(opts, client)\r\n  socketTask = wx.connectSocket({\r\n    url: url,\r\n    protocols: [websocketSubProtocol]\r\n  })\r\n\r\n  proxy = buildProxy()\r\n  stream = duplexify.obj()\r\n  stream._destroy = function (err, cb) {\r\n    socketTask.close({\r\n      success: function () {\r\n        cb && cb(err)\r\n      }\r\n    })\r\n  }\r\n\r\n  const destroyRef = stream.destroy\r\n  stream.destroy = function () {\r\n    stream.destroy = destroyRef\r\n\r\n    const self = this\r\n    setTimeout(function () {\r\n      socketTask.close({\r\n        fail: function () {\r\n          self._destroy(new Error())\r\n        }\r\n      })\r\n    }, 0)\r\n  }.bind(stream)\r\n\r\n  bindEventHandler()\r\n\r\n  return stream\r\n}\r\n\r\nmodule.exports = buildStream\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}