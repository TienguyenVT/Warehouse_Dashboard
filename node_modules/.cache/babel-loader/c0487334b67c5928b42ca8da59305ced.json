{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents\\\\warehouse-dashboard\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// File: Dashboard.js\n// Mô tả: Component React chính hiển thị dashboard quản lý kho hàng.\n// Chức năng: Quản lý trạng thái, lọc, thống kê, hiển thị lưới kệ, chi tiết kệ, và đồng bộ dữ liệu mock cho toàn bộ hệ thống.\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Dashboard.css';\nimport ShelfGrid from '../components/ShelfGrid/ShelfGrid';\nimport FilterPanel from '../components/FilterPanel/FilterPanel';\nimport ShelfDetail from '../components/ShelfDetail/ShelfDetail';\nimport { shelf } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const history = useHistory();\n  const [shelves, setShelves] = useState([]);\n  const [filteredShelves, setFilteredShelves] = useState([]);\n  const [selectedShelf, setSelectedShelf] = useState(null);\n  const [filters, setFilters] = useState({\n    tier: 'all',\n    status: 'all'\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const handleLogout = () => {\n    onLogout();\n    history.push('/login');\n  };\n\n  // Loại bỏ hàm calculateStats vì không cần thiết nữa\n\n  // Áp dụng bộ lọc, an toàn với dữ liệu thiếu\n  const applyFilters = (shelfList, currentFilters) => {\n    return (Array.isArray(shelfList) ? shelfList : []).filter(shelf => {\n      const tierMatch = currentFilters.tier === 'all' || String(shelf.tier) === String(currentFilters.tier);\n      const statusMatch = currentFilters.status === 'all' || shelf.status && shelf.status === currentFilters.status;\n      return tierMatch && statusMatch;\n    });\n  };\n\n  // Load dữ liệu ban đầu\n  useEffect(() => {\n    let isMounted = true;\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        const data = await shelf.fetchAll();\n        if (!isMounted) return;\n        setShelves(data);\n        const filtered = applyFilters(data, filters);\n        setFilteredShelves(filtered);\n      } catch (err) {\n        if (isMounted) setError(err.message);\n      } finally {\n        if (isMounted) setLoading(false);\n      }\n    };\n    loadData();\n    return () => {\n      isMounted = false;\n    };\n  }, [filters]);\n\n  // Subscribe to shelf updates (mock)\n  useEffect(() => {\n    let unsub = null;\n    const subscribe = async () => {\n      unsub = await shelf.subscribeToUpdates(update => {\n        setShelves(prevShelves => {\n          const newShelves = prevShelves.map(s => s.tier === update.tier && s.tray === update.tray ? {\n            ...s,\n            ...update\n          } : s);\n          const filtered = applyFilters(newShelves, filters);\n          setFilteredShelves(filtered);\n          return newShelves;\n        });\n      });\n    };\n    subscribe();\n    return () => {\n      if (unsub) unsub();\n    };\n  }, [filters]);\n\n  // Xử lý thay đổi bộ lọc\n  const handleFilterChange = (type, value, newFilters) => {\n    // newFilters có thể được truyền từ FilterPanel, nếu không thì tự tạo\n    const nextFilters = newFilters || {\n      ...filters,\n      [type]: value\n    };\n    setFilters(nextFilters);\n    const filtered = applyFilters(shelves, nextFilters);\n    setFilteredShelves(filtered);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      role: \"status\",\n      children: \"\\u0110ang t\\u1EA3i d\\u1EEF li\\u1EC7u...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      role: \"alert\",\n      children: [\"L\\u1ED7i: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-title\",\n        children: \"Warehouse Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"user-name\",\n          children: (user === null || user === void 0 ? void 0 : user.username) || 'Admin'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: handleLogout,\n          children: \"\\u0110\\u0103ng xu\\u1EA5t\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), \"      \", /*#__PURE__*/_jsxDEV(FilterPanel, {\n      tiers: [...new Set(shelves.map(s => s.tier))].sort(),\n      statuses: ['HIGH', 'MEDIUM', 'EMPTY'],\n      filters: filters,\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(ShelfGrid, {\n      shelves: filteredShelves,\n      onShelfClick: setSelectedShelf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), selectedShelf && /*#__PURE__*/_jsxDEV(ShelfDetail, {\n      shelf: selectedShelf,\n      onClose: () => setSelectedShelf(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"CEzzwG3kDT9D9tTWAv4bRsIoxhI=\", false, function () {\n  return [useHistory];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","ShelfGrid","FilterPanel","ShelfDetail","shelf","jsxDEV","_jsxDEV","Dashboard","user","onLogout","_s","history","shelves","setShelves","filteredShelves","setFilteredShelves","selectedShelf","setSelectedShelf","filters","setFilters","tier","status","loading","setLoading","error","setError","handleLogout","push","applyFilters","shelfList","currentFilters","Array","isArray","filter","tierMatch","String","statusMatch","isMounted","loadData","data","fetchAll","filtered","err","message","unsub","subscribe","subscribeToUpdates","update","prevShelves","newShelves","map","s","tray","handleFilterChange","type","value","newFilters","nextFilters","className","role","children","fileName","_jsxFileName","lineNumber","columnNumber","username","onClick","tiers","Set","sort","statuses","onFilterChange","onShelfClick","onClose","_c","$RefreshReg$"],"sources":["C:/Documents/warehouse-dashboard/src/pages/Dashboard.js"],"sourcesContent":["// File: Dashboard.js\r\n// Mô tả: Component React chính hiển thị dashboard quản lý kho hàng.\r\n// Chức năng: Quản lý trạng thái, lọc, thống kê, hiển thị lưới kệ, chi tiết kệ, và đồng bộ dữ liệu mock cho toàn bộ hệ thống.\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Dashboard.css';\r\nimport ShelfGrid from '../components/ShelfGrid/ShelfGrid';\r\nimport FilterPanel from '../components/FilterPanel/FilterPanel';\r\nimport ShelfDetail from '../components/ShelfDetail/ShelfDetail';\r\nimport { shelf } from '../utils/api';\r\n\r\nconst Dashboard = ({ user, onLogout }) => {\r\n  const history = useHistory();\r\n  const [shelves, setShelves] = useState([]);\r\n  const [filteredShelves, setFilteredShelves] = useState([]);\r\n  const [selectedShelf, setSelectedShelf] = useState(null);\r\n  const [filters, setFilters] = useState({ tier: 'all', status: 'all' });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleLogout = () => {\r\n    onLogout();\r\n    history.push('/login');\r\n  };\r\n\r\n  // Loại bỏ hàm calculateStats vì không cần thiết nữa\r\n\r\n\r\n  // Áp dụng bộ lọc, an toàn với dữ liệu thiếu\r\n  const applyFilters = (shelfList, currentFilters) => {\r\n    return (Array.isArray(shelfList) ? shelfList : []).filter(shelf => {\r\n      const tierMatch = currentFilters.tier === 'all' || String(shelf.tier) === String(currentFilters.tier);\r\n      const statusMatch = currentFilters.status === 'all' || (shelf.status && shelf.status === currentFilters.status);\r\n      return tierMatch && statusMatch;\r\n    });\r\n  };\r\n\r\n  // Load dữ liệu ban đầu\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const loadData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const data = await shelf.fetchAll();\r\n        if (!isMounted) return;        setShelves(data);\r\n        const filtered = applyFilters(data, filters);\r\n        setFilteredShelves(filtered);\r\n      } catch (err) {\r\n        if (isMounted) setError(err.message);\r\n      } finally {\r\n        if (isMounted) setLoading(false);\r\n      }\r\n    };\r\n    loadData();\r\n    return () => { isMounted = false; };\r\n  }, [filters]);\r\n\r\n\r\n  // Subscribe to shelf updates (mock)\r\n  useEffect(() => {\r\n    let unsub = null;\r\n    const subscribe = async () => {\r\n      unsub = await shelf.subscribeToUpdates((update) => {\r\n        setShelves(prevShelves => {\r\n          const newShelves = prevShelves.map(s =>\r\n            s.tier === update.tier && s.tray === update.tray\r\n              ? { ...s, ...update }\r\n              : s          );\r\n          const filtered = applyFilters(newShelves, filters);\r\n          setFilteredShelves(filtered);\r\n          return newShelves;\r\n        });\r\n      });\r\n    };\r\n    subscribe();\r\n    return () => { if (unsub) unsub(); };\r\n  }, [filters]);\r\n\r\n\r\n  // Xử lý thay đổi bộ lọc\r\n  const handleFilterChange = (type, value, newFilters) => {\r\n    // newFilters có thể được truyền từ FilterPanel, nếu không thì tự tạo\r\n    const nextFilters = newFilters || { ...filters, [type]: value };\r\n    setFilters(nextFilters);\r\n    const filtered = applyFilters(shelves, nextFilters);\r\n    setFilteredShelves(filtered);\r\n  };\r\n\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\" role=\"status\">Đang tải dữ liệu...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\" role=\"alert\">Lỗi: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <h1 className=\"dashboard-title\">Warehouse Dashboard</h1>\r\n        <div className=\"user-info\">\r\n          <span className=\"user-name\">{user?.username || 'Admin'}</span>\r\n          <button className=\"logout-button\" onClick={handleLogout}>\r\n            Đăng xuất\r\n          </button>\r\n        </div>\r\n      </div>      <FilterPanel \r\n        tiers={[...new Set(shelves.map(s => s.tier))].sort()}        statuses={['HIGH', 'MEDIUM', 'EMPTY']}\r\n        filters={filters}\r\n        onFilterChange={handleFilterChange}\r\n      />\r\n      \r\n      <ShelfGrid \r\n        shelves={filteredShelves}\r\n        onShelfClick={setSelectedShelf}\r\n      />\r\n      \r\n      {selectedShelf && (\r\n        <ShelfDetail \r\n          shelf={selectedShelf}\r\n          onClose={() => setSelectedShelf(null)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}