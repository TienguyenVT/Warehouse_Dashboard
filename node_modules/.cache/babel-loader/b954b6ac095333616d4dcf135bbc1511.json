{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents\\\\warehouse-dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Dashboard from './pages/Dashboard';\nimport { authAPI } from './utils/api';\nimport './styles/global.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Đặt trạng thái đăng nhập mặc định là true để bỏ qua màn hình đăng nhập\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  // Tạo một user mẫu\n  const [user, setUser] = useState({\n    id: 1,\n    username: 'admin',\n    email: 'admin@example.com',\n    role: 'admin'\n  });\n  const [isLoading, setIsLoading] = useState(false); // Không cần loading nữa\n  // Thêm useState để định nghĩa setShowRegister\n  const [showRegister, setShowRegister] = useState(false);\n\n  // Bỏ qua kiểm tra token khi khởi động\n  // useEffect(() => {\n  //   const token = localStorage.getItem('token');\n  //   if (token) {\n  //     checkAuth();\n  //   } else {\n  //     setIsLoading(false);\n  //   }\n  // }, []);\n\n  const checkAuth = async () => {\n    try {\n      const userData = await authAPI.getProfile();\n      setUser(userData);\n      setIsLoggedIn(true);\n    } catch (err) {\n      localStorage.removeItem('token');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await authAPI.login(username, password);\n      setUser(response.user);\n      setIsLoggedIn(true);\n      localStorage.setItem('token', response.token);\n    } catch (err) {\n      throw err;\n    }\n  };\n  const handleLogout = () => {\n    // Vì đã bỏ qua bước đăng nhập, nên logout sẽ không đưa người dùng về màn hình đăng nhập\n    // Thay vào đó, khởi tạo lại user mẫu\n    setUser({\n      id: 1,\n      username: 'admin',\n      email: 'admin@example.com',\n      role: 'admin'\n    });\n  };\n  const handleRegister = async userData => {\n    try {\n      await authAPI.register(userData);\n      setShowRegister(false);\n    } catch (err) {\n      throw err;\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Luôn hiển thị Dashboard\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Dashboard, {\n      user: user,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"k/RTHnsSMMZ7D1HZOyrLh0SgVUs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Dashboard","authAPI","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","user","setUser","id","username","email","role","isLoading","setIsLoading","showRegister","setShowRegister","checkAuth","userData","getProfile","err","localStorage","removeItem","handleLogin","password","response","login","setItem","token","handleLogout","handleRegister","register","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogout","_c","$RefreshReg$"],"sources":["C:/Documents/warehouse-dashboard/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Dashboard from './pages/Dashboard';\r\nimport { authAPI } from './utils/api';\r\nimport './styles/global.css';\r\n\r\nfunction App() {\r\n  // Đặt trạng thái đăng nhập mặc định là true để bỏ qua màn hình đăng nhập\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n  // Tạo một user mẫu\r\n  const [user, setUser] = useState({\r\n    id: 1,\r\n    username: 'admin',\r\n    email: 'admin@example.com',\r\n    role: 'admin'\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false); // Không cần loading nữa\r\n  // Thêm useState để định nghĩa setShowRegister\r\n  const [showRegister, setShowRegister] = useState(false);\r\n\r\n  // Bỏ qua kiểm tra token khi khởi động\r\n  // useEffect(() => {\r\n  //   const token = localStorage.getItem('token');\r\n  //   if (token) {\r\n  //     checkAuth();\r\n  //   } else {\r\n  //     setIsLoading(false);\r\n  //   }\r\n  // }, []);\r\n\r\n  const checkAuth = async () => {\r\n    try {\r\n      const userData = await authAPI.getProfile();\r\n      setUser(userData);\r\n      setIsLoggedIn(true);\r\n    } catch (err) {\r\n      localStorage.removeItem('token');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleLogin = async (username, password) => {\r\n    try {\r\n      const response = await authAPI.login(username, password);\r\n      setUser(response.user);\r\n      setIsLoggedIn(true);\r\n      localStorage.setItem('token', response.token);\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    // Vì đã bỏ qua bước đăng nhập, nên logout sẽ không đưa người dùng về màn hình đăng nhập\r\n    // Thay vào đó, khởi tạo lại user mẫu\r\n    setUser({\r\n      id: 1,\r\n      username: 'admin',\r\n      email: 'admin@example.com',\r\n      role: 'admin'\r\n    });\r\n  };\r\n\r\n  const handleRegister = async (userData) => {\r\n    try {\r\n      await authAPI.register(userData);\r\n      setShowRegister(false);\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n\r\n  // Luôn hiển thị Dashboard\r\n  return (\r\n    <div className=\"App\">\r\n      <Dashboard user={user} onLogout={handleLogout} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}