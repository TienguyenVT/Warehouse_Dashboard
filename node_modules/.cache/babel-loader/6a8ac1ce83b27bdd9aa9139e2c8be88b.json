{"ast":null,"code":"var __extends = this && this.t || function () {\n  var extendStatics = function (i, r) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (i, r) {\n      i.__proto__ = r;\n    } || function (i, r) {\n      for (var t in r) if (Object.prototype.hasOwnProperty.call(r, t)) i[t] = r[t];\n    };\n    return extendStatics(i, r);\n  };\n  return function (i, r) {\n    if (typeof r !== \"function\" && r !== null) throw new TypeError(\"Class extends value \" + String(r) + \" is not a constructor or null\");\n    extendStatics(i, r);\n    function __() {\n      this.constructor = i;\n    }\n    i.prototype = r === null ? Object.create(r) : (__.prototype = r.prototype, new __());\n  };\n}();\nvar __read = this && this.q || function (i, r) {\n  var t = typeof Symbol === \"function\" && i[Symbol.iterator];\n  if (!t) return i;\n  var e = t.call(i),\n    n,\n    u = [],\n    s;\n  try {\n    while ((r === void 0 || r-- > 0) && !(n = e.next()).done) u.push(n.value);\n  } catch (i) {\n    s = {\n      error: i\n    };\n  } finally {\n    try {\n      if (n && !n.done && (t = e[\"return\"])) t.call(e);\n    } finally {\n      if (s) throw s.error;\n    }\n  }\n  return u;\n};\nvar __spreadArray = this && this.D || function (i, r, t) {\n  if (t || arguments.length === 2) for (var e = 0, n = r.length, u; e < n; e++) {\n    if (u || !(e in r)) {\n      if (!u) u = Array.prototype.slice.call(r, 0, e);\n      u[e] = r[e];\n    }\n  }\n  return i.concat(u || Array.prototype.slice.call(r));\n};\nimport { Base } from \"../ContainerBase\";\nvar PriorityQueue = function (i) {\n  __extends(PriorityQueue, i);\n  function PriorityQueue(r, t, e) {\n    if (r === void 0) {\n      r = [];\n    }\n    if (t === void 0) {\n      t = function (i, r) {\n        if (i > r) return -1;\n        if (i < r) return 1;\n        return 0;\n      };\n    }\n    if (e === void 0) {\n      e = true;\n    }\n    var n = i.call(this) || this;\n    n.$ = t;\n    if (Array.isArray(r)) {\n      n.ii = e ? __spreadArray([], __read(r), false) : r;\n    } else {\n      n.ii = [];\n      var u = n;\n      r.forEach(function (i) {\n        u.ii.push(i);\n      });\n    }\n    n.M = n.ii.length;\n    var s = n.M >> 1;\n    for (var o = n.M - 1 >> 1; o >= 0; --o) {\n      n.ri(o, s);\n    }\n    return n;\n  }\n  PriorityQueue.prototype.ti = function (i) {\n    var r = this.ii[i];\n    while (i > 0) {\n      var t = i - 1 >> 1;\n      var e = this.ii[t];\n      if (this.$(e, r) <= 0) break;\n      this.ii[i] = e;\n      i = t;\n    }\n    this.ii[i] = r;\n  };\n  PriorityQueue.prototype.ri = function (i, r) {\n    var t = this.ii[i];\n    while (i < r) {\n      var e = i << 1 | 1;\n      var n = e + 1;\n      var u = this.ii[e];\n      if (n < this.M && this.$(u, this.ii[n]) > 0) {\n        e = n;\n        u = this.ii[n];\n      }\n      if (this.$(u, t) >= 0) break;\n      this.ii[i] = u;\n      i = e;\n    }\n    this.ii[i] = t;\n  };\n  PriorityQueue.prototype.clear = function () {\n    this.M = 0;\n    this.ii.length = 0;\n  };\n  PriorityQueue.prototype.push = function (i) {\n    this.ii.push(i);\n    this.ti(this.M);\n    this.M += 1;\n  };\n  PriorityQueue.prototype.pop = function () {\n    if (this.M === 0) return;\n    var i = this.ii[0];\n    var r = this.ii.pop();\n    this.M -= 1;\n    if (this.M) {\n      this.ii[0] = r;\n      this.ri(0, this.M >> 1);\n    }\n    return i;\n  };\n  PriorityQueue.prototype.top = function () {\n    return this.ii[0];\n  };\n  PriorityQueue.prototype.find = function (i) {\n    return this.ii.indexOf(i) >= 0;\n  };\n  PriorityQueue.prototype.remove = function (i) {\n    var r = this.ii.indexOf(i);\n    if (r < 0) return false;\n    if (r === 0) {\n      this.pop();\n    } else if (r === this.M - 1) {\n      this.ii.pop();\n      this.M -= 1;\n    } else {\n      this.ii.splice(r, 1, this.ii.pop());\n      this.M -= 1;\n      this.ti(r);\n      this.ri(r, this.M >> 1);\n    }\n    return true;\n  };\n  PriorityQueue.prototype.updateItem = function (i) {\n    var r = this.ii.indexOf(i);\n    if (r < 0) return false;\n    this.ti(r);\n    this.ri(r, this.M >> 1);\n    return true;\n  };\n  PriorityQueue.prototype.toArray = function () {\n    return __spreadArray([], __read(this.ii), false);\n  };\n  return PriorityQueue;\n}(Base);\nexport default PriorityQueue;","map":{"version":3,"sources":["container/OtherContainer/PriorityQueue.js","../../src/container/OtherContainer/PriorityQueue.ts"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__read","o","n","m","Symbol","iterator","i","r","ar","e","next","done","push","value","error","__spreadArray","to","from","pack","arguments","length","l","slice","concat","_this","Base","x","y","_super","_cmp","cmp","isArray","container","_priorityQueue","copy","self_1","forEach","el","_length","halfLength","parent_1","_pushDown","PriorityQueue","pos","item","parent_2","parentItem","left","right","minItem","_pushUp","last","pop","indexOf","index","splice"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { Base } from \"../ContainerBase\";\nvar PriorityQueue = /** @class */ (function (_super) {\n    __extends(PriorityQueue, _super);\n    /**\n     * @description PriorityQueue's constructor.\n     * @param container - Initialize container, must have a forEach function.\n     * @param cmp - Compare function.\n     * @param copy - When the container is an array, you can choose to directly operate on the original object of\n     *               the array or perform a shallow copy. The default is shallow copy.\n     * @example\n     * new PriorityQueue();\n     * new PriorityQueue([1, 2, 3]);\n     * new PriorityQueue([1, 2, 3], (x, y) => x - y);\n     * new PriorityQueue([1, 2, 3], (x, y) => x - y, false);\n     */\n    function PriorityQueue(container, cmp, copy) {\n        if (container === void 0) { container = []; }\n        if (cmp === void 0) { cmp = function (x, y) {\n            if (x > y)\n                return -1;\n            if (x < y)\n                return 1;\n            return 0;\n        }; }\n        if (copy === void 0) { copy = true; }\n        var _this = _super.call(this) || this;\n        _this._cmp = cmp;\n        if (Array.isArray(container)) {\n            _this._priorityQueue = copy ? __spreadArray([], __read(container), false) : container;\n        }\n        else {\n            _this._priorityQueue = [];\n            var self_1 = _this;\n            container.forEach(function (el) {\n                self_1._priorityQueue.push(el);\n            });\n        }\n        _this._length = _this._priorityQueue.length;\n        var halfLength = _this._length >> 1;\n        for (var parent_1 = (_this._length - 1) >> 1; parent_1 >= 0; --parent_1) {\n            _this._pushDown(parent_1, halfLength);\n        }\n        return _this;\n    }\n    /**\n     * @internal\n     */\n    PriorityQueue.prototype._pushUp = function (pos) {\n        var item = this._priorityQueue[pos];\n        while (pos > 0) {\n            var parent_2 = (pos - 1) >> 1;\n            var parentItem = this._priorityQueue[parent_2];\n            if (this._cmp(parentItem, item) <= 0)\n                break;\n            this._priorityQueue[pos] = parentItem;\n            pos = parent_2;\n        }\n        this._priorityQueue[pos] = item;\n    };\n    /**\n     * @internal\n     */\n    PriorityQueue.prototype._pushDown = function (pos, halfLength) {\n        var item = this._priorityQueue[pos];\n        while (pos < halfLength) {\n            var left = pos << 1 | 1;\n            var right = left + 1;\n            var minItem = this._priorityQueue[left];\n            if (right < this._length &&\n                this._cmp(minItem, this._priorityQueue[right]) > 0) {\n                left = right;\n                minItem = this._priorityQueue[right];\n            }\n            if (this._cmp(minItem, item) >= 0)\n                break;\n            this._priorityQueue[pos] = minItem;\n            pos = left;\n        }\n        this._priorityQueue[pos] = item;\n    };\n    PriorityQueue.prototype.clear = function () {\n        this._length = 0;\n        this._priorityQueue.length = 0;\n    };\n    /**\n     * @description Push element into a container in order.\n     * @param item - The element you want to push.\n     * @returns The size of heap after pushing.\n     * @example\n     * queue.push(1);\n     */\n    PriorityQueue.prototype.push = function (item) {\n        this._priorityQueue.push(item);\n        this._pushUp(this._length);\n        this._length += 1;\n    };\n    /**\n     * @description Removes the top element.\n     * @returns The element you popped.\n     * @example\n     * queue.pop();\n     */\n    PriorityQueue.prototype.pop = function () {\n        if (this._length === 0)\n            return;\n        var value = this._priorityQueue[0];\n        var last = this._priorityQueue.pop();\n        this._length -= 1;\n        if (this._length) {\n            this._priorityQueue[0] = last;\n            this._pushDown(0, this._length >> 1);\n        }\n        return value;\n    };\n    /**\n     * @description Accesses the top element.\n     * @example\n     * const top = queue.top();\n     */\n    PriorityQueue.prototype.top = function () {\n        return this._priorityQueue[0];\n    };\n    /**\n     * @description Check if element is in heap.\n     * @param item - The item want to find.\n     * @returns Whether element is in heap.\n     * @example\n     * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n     * const obj = { id: 1 };\n     * que.push(obj);\n     * console.log(que.find(obj));  // true\n     */\n    PriorityQueue.prototype.find = function (item) {\n        return this._priorityQueue.indexOf(item) >= 0;\n    };\n    /**\n     * @description Remove specified item from heap.\n     * @param item - The item want to remove.\n     * @returns Whether remove success.\n     * @example\n     * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n     * const obj = { id: 1 };\n     * que.push(obj);\n     * que.remove(obj);\n     */\n    PriorityQueue.prototype.remove = function (item) {\n        var index = this._priorityQueue.indexOf(item);\n        if (index < 0)\n            return false;\n        if (index === 0) {\n            this.pop();\n        }\n        else if (index === this._length - 1) {\n            this._priorityQueue.pop();\n            this._length -= 1;\n        }\n        else {\n            this._priorityQueue.splice(index, 1, this._priorityQueue.pop());\n            this._length -= 1;\n            this._pushUp(index);\n            this._pushDown(index, this._length >> 1);\n        }\n        return true;\n    };\n    /**\n     * @description Update item and it's pos in the heap.\n     * @param item - The item want to update.\n     * @returns Whether update success.\n     * @example\n     * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n     * const obj = { id: 1 };\n     * que.push(obj);\n     * obj.id = 2;\n     * que.updateItem(obj);\n     */\n    PriorityQueue.prototype.updateItem = function (item) {\n        var index = this._priorityQueue.indexOf(item);\n        if (index < 0)\n            return false;\n        this._pushUp(index);\n        this._pushDown(index, this._length >> 1);\n        return true;\n    };\n    /**\n     * @returns Return a copy array of heap.\n     * @example\n     * const arr = queue.toArray();\n     */\n    PriorityQueue.prototype.toArray = function () {\n        return __spreadArray([], __read(this._priorityQueue), false);\n    };\n    return PriorityQueue;\n}(Base));\nexport default PriorityQueue;\n","import { Base, initContainer } from '@/container/ContainerBase';\n\nclass PriorityQueue<T> extends Base {\n  /**\n   * @internal\n   */\n  private readonly _priorityQueue: T[];\n  /**\n   * @internal\n   */\n  private readonly _cmp: (x: T, y: T) => number;\n  /**\n   * @description PriorityQueue's constructor.\n   * @param container - Initialize container, must have a forEach function.\n   * @param cmp - Compare function.\n   * @param copy - When the container is an array, you can choose to directly operate on the original object of\n   *               the array or perform a shallow copy. The default is shallow copy.\n   * @example\n   * new PriorityQueue();\n   * new PriorityQueue([1, 2, 3]);\n   * new PriorityQueue([1, 2, 3], (x, y) => x - y);\n   * new PriorityQueue([1, 2, 3], (x, y) => x - y, false);\n   */\n  constructor(\n    container: initContainer<T> = [],\n    cmp: (x: T, y: T) => number =\n    function (x: T, y: T) {\n      if (x > y) return -1;\n      if (x < y) return 1;\n      return 0;\n    },\n    copy = true\n  ) {\n    super();\n    this._cmp = cmp;\n    if (Array.isArray(container)) {\n      this._priorityQueue = copy ? [...container] : container;\n    } else {\n      this._priorityQueue = [];\n      const self = this;\n      container.forEach(function (el) {\n        self._priorityQueue.push(el);\n      });\n    }\n    this._length = this._priorityQueue.length;\n    const halfLength = this._length >> 1;\n    for (let parent = (this._length - 1) >> 1; parent >= 0; --parent) {\n      this._pushDown(parent, halfLength);\n    }\n  }\n  /**\n   * @internal\n   */\n  private _pushUp(pos: number) {\n    const item = this._priorityQueue[pos];\n    while (pos > 0) {\n      const parent = (pos - 1) >> 1;\n      const parentItem = this._priorityQueue[parent];\n      if (this._cmp(parentItem, item) <= 0) break;\n      this._priorityQueue[pos] = parentItem;\n      pos = parent;\n    }\n    this._priorityQueue[pos] = item;\n  }\n  /**\n   * @internal\n   */\n  private _pushDown(pos: number, halfLength: number) {\n    const item = this._priorityQueue[pos];\n    while (pos < halfLength) {\n      let left = pos << 1 | 1;\n      const right = left + 1;\n      let minItem = this._priorityQueue[left];\n      if (\n        right < this._length &&\n        this._cmp(minItem, this._priorityQueue[right]) > 0\n      ) {\n        left = right;\n        minItem = this._priorityQueue[right];\n      }\n      if (this._cmp(minItem, item) >= 0) break;\n      this._priorityQueue[pos] = minItem;\n      pos = left;\n    }\n    this._priorityQueue[pos] = item;\n  }\n  clear() {\n    this._length = 0;\n    this._priorityQueue.length = 0;\n  }\n  /**\n   * @description Push element into a container in order.\n   * @param item - The element you want to push.\n   * @returns The size of heap after pushing.\n   * @example\n   * queue.push(1);\n   */\n  push(item: T) {\n    this._priorityQueue.push(item);\n    this._pushUp(this._length);\n    this._length += 1;\n  }\n  /**\n   * @description Removes the top element.\n   * @returns The element you popped.\n   * @example\n   * queue.pop();\n   */\n  pop() {\n    if (this._length === 0) return;\n    const value = this._priorityQueue[0];\n    const last = this._priorityQueue.pop()!;\n    this._length -= 1;\n    if (this._length) {\n      this._priorityQueue[0] = last;\n      this._pushDown(0, this._length >> 1);\n    }\n    return value;\n  }\n  /**\n   * @description Accesses the top element.\n   * @example\n   * const top = queue.top();\n   */\n  top(): T | undefined {\n    return this._priorityQueue[0];\n  }\n  /**\n   * @description Check if element is in heap.\n   * @param item - The item want to find.\n   * @returns Whether element is in heap.\n   * @example\n   * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n   * const obj = { id: 1 };\n   * que.push(obj);\n   * console.log(que.find(obj));  // true\n   */\n  find(item: T) {\n    return this._priorityQueue.indexOf(item) >= 0;\n  }\n  /**\n   * @description Remove specified item from heap.\n   * @param item - The item want to remove.\n   * @returns Whether remove success.\n   * @example\n   * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n   * const obj = { id: 1 };\n   * que.push(obj);\n   * que.remove(obj);\n   */\n  remove(item: T) {\n    const index = this._priorityQueue.indexOf(item);\n    if (index < 0) return false;\n    if (index === 0) {\n      this.pop();\n    } else if (index === this._length - 1) {\n      this._priorityQueue.pop();\n      this._length -= 1;\n    } else {\n      this._priorityQueue.splice(index, 1, this._priorityQueue.pop()!);\n      this._length -= 1;\n      this._pushUp(index);\n      this._pushDown(index, this._length >> 1);\n    }\n    return true;\n  }\n  /**\n   * @description Update item and it's pos in the heap.\n   * @param item - The item want to update.\n   * @returns Whether update success.\n   * @example\n   * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n   * const obj = { id: 1 };\n   * que.push(obj);\n   * obj.id = 2;\n   * que.updateItem(obj);\n   */\n  updateItem(item: T) {\n    const index = this._priorityQueue.indexOf(item);\n    if (index < 0) return false;\n    this._pushUp(index);\n    this._pushDown(index, this._length >> 1);\n    return true;\n  }\n  /**\n   * @returns Return a copy array of heap.\n   * @example\n   * const arr = queue.toArray();\n   */\n  toArray() {\n    return [...this._priorityQueue];\n  }\n}\n\nexport default PriorityQueue;\n"]},"metadata":{},"sourceType":"module"}