{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents\\\\warehouse-dashboard\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// File: Dashboard.js\n// Mô tả: Component React chính hiển thị dashboard quản lý kho hàng.\n// Chức năng: Quản lý trạng thái, lọc, thống kê, hiển thị lưới kệ, chi tiết kệ, và đồng bộ dữ liệu mock cho toàn bộ hệ thống.\nimport React, { useState, useEffect } from 'react';\nimport './Dashboard.css';\nimport ShelfGrid from '../components/ShelfGrid/ShelfGrid';\nimport FilterPanel from '../components/FilterPanel/FilterPanel';\nimport ShelfDetail from '../components/ShelfDetail/ShelfDetail';\nimport { shelf } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const [shelves, setShelves] = useState([]);\n  const [filteredShelves, setFilteredShelves] = useState([]);\n  const [selectedShelf, setSelectedShelf] = useState(null);\n  const [filters, setFilters] = useState({\n    tier: 'all',\n    status: 'all'\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Loại bỏ hàm calculateStats vì không cần thiết nữa\n\n  // Áp dụng bộ lọc, an toàn với dữ liệu thiếu\n  const applyFilters = (shelfList, currentFilters) => {\n    return (Array.isArray(shelfList) ? shelfList : []).filter(shelf => {\n      const tierMatch = currentFilters.tier === 'all' || String(shelf.tier) === String(currentFilters.tier);\n      const statusMatch = currentFilters.status === 'all' || shelf.status && shelf.status === currentFilters.status;\n      return tierMatch && statusMatch;\n    });\n  };\n\n  // Load dữ liệu ban đầu\n  useEffect(() => {\n    let isMounted = true;\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        const data = await shelf.fetchAll();\n        if (!isMounted) return;\n        setShelves(data);\n        const filtered = applyFilters(data, filters);\n        setFilteredShelves(filtered);\n      } catch (err) {\n        if (isMounted) setError(err.message);\n      } finally {\n        if (isMounted) setLoading(false);\n      }\n    };\n    loadData();\n    return () => {\n      isMounted = false;\n    };\n  }, [filters]);\n\n  // Subscribe to shelf updates (mock)\n  useEffect(() => {\n    let unsub = null;\n    const subscribe = async () => {\n      unsub = await shelf.subscribeToUpdates(update => {\n        setShelves(prevShelves => {\n          const newShelves = prevShelves.map(s => s.tier === update.tier && s.tray === update.tray ? {\n            ...s,\n            ...update\n          } : s);\n          const filtered = applyFilters(newShelves, filters);\n          setFilteredShelves(filtered);\n          return newShelves;\n        });\n      });\n    };\n    subscribe();\n    return () => {\n      if (unsub) unsub();\n    };\n  }, [filters]);\n\n  // Xử lý thay đổi bộ lọc\n  const handleFilterChange = (type, value, newFilters) => {\n    // newFilters có thể được truyền từ FilterPanel, nếu không thì tự tạo\n    const nextFilters = newFilters || {\n      ...filters,\n      [type]: value\n    };\n    setFilters(nextFilters);\n    const filtered = applyFilters(shelves, nextFilters);\n    setFilteredShelves(filtered);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      role: \"status\",\n      children: \"\\u0110ang t\\u1EA3i d\\u1EEF li\\u1EC7u...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      role: \"alert\",\n      children: [\"L\\u1ED7i: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-title\",\n        children: \"Warehouse Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"user-name\",\n          children: (user === null || user === void 0 ? void 0 : user.username) || 'Admin'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: onLogout,\n          children: \"\\u0110\\u0103ng xu\\u1EA5t\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), \"      \", /*#__PURE__*/_jsxDEV(FilterPanel, {\n      tiers: [...new Set(shelves.map(s => s.tier))].sort(),\n      statuses: ['HIGH', 'MEDIUM', 'EMPTY'],\n      filters: filters,\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(ShelfGrid, {\n      shelves: filteredShelves,\n      onShelfClick: setSelectedShelf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), selectedShelf && /*#__PURE__*/_jsxDEV(ShelfDetail, {\n      shelf: selectedShelf,\n      onClose: () => setSelectedShelf(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"B4Vb2RCf3ePydz++VOP+iwppdcE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","ShelfGrid","FilterPanel","ShelfDetail","shelf","jsxDEV","_jsxDEV","Dashboard","user","onLogout","_s","shelves","setShelves","filteredShelves","setFilteredShelves","selectedShelf","setSelectedShelf","filters","setFilters","tier","status","loading","setLoading","error","setError","applyFilters","shelfList","currentFilters","Array","isArray","filter","tierMatch","String","statusMatch","isMounted","loadData","data","fetchAll","filtered","err","message","unsub","subscribe","subscribeToUpdates","update","prevShelves","newShelves","map","s","tray","handleFilterChange","type","value","newFilters","nextFilters","className","role","children","fileName","_jsxFileName","lineNumber","columnNumber","username","onClick","tiers","Set","sort","statuses","onFilterChange","onShelfClick","onClose","_c","$RefreshReg$"],"sources":["C:/Documents/warehouse-dashboard/src/pages/Dashboard.js"],"sourcesContent":["// File: Dashboard.js\n// Mô tả: Component React chính hiển thị dashboard quản lý kho hàng.\n// Chức năng: Quản lý trạng thái, lọc, thống kê, hiển thị lưới kệ, chi tiết kệ, và đồng bộ dữ liệu mock cho toàn bộ hệ thống.\nimport React, { useState, useEffect } from 'react';\nimport './Dashboard.css';\nimport ShelfGrid from '../components/ShelfGrid/ShelfGrid';\nimport FilterPanel from '../components/FilterPanel/FilterPanel';\nimport ShelfDetail from '../components/ShelfDetail/ShelfDetail';\nimport { shelf } from '../utils/api';\n\nconst Dashboard = ({ user, onLogout }) => {\n  const [shelves, setShelves] = useState([]);\n  const [filteredShelves, setFilteredShelves] = useState([]);\n  const [selectedShelf, setSelectedShelf] = useState(null);  const [filters, setFilters] = useState({ tier: 'all', status: 'all' });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Loại bỏ hàm calculateStats vì không cần thiết nữa\n\n\n  // Áp dụng bộ lọc, an toàn với dữ liệu thiếu\n  const applyFilters = (shelfList, currentFilters) => {\n    return (Array.isArray(shelfList) ? shelfList : []).filter(shelf => {\n      const tierMatch = currentFilters.tier === 'all' || String(shelf.tier) === String(currentFilters.tier);\n      const statusMatch = currentFilters.status === 'all' || (shelf.status && shelf.status === currentFilters.status);\n      return tierMatch && statusMatch;\n    });\n  };\n\n  // Load dữ liệu ban đầu\n  useEffect(() => {\n    let isMounted = true;\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        const data = await shelf.fetchAll();\n        if (!isMounted) return;        setShelves(data);\n        const filtered = applyFilters(data, filters);\n        setFilteredShelves(filtered);\n      } catch (err) {\n        if (isMounted) setError(err.message);\n      } finally {\n        if (isMounted) setLoading(false);\n      }\n    };\n    loadData();\n    return () => { isMounted = false; };\n  }, [filters]);\n\n\n  // Subscribe to shelf updates (mock)\n  useEffect(() => {\n    let unsub = null;\n    const subscribe = async () => {\n      unsub = await shelf.subscribeToUpdates((update) => {\n        setShelves(prevShelves => {\n          const newShelves = prevShelves.map(s =>\n            s.tier === update.tier && s.tray === update.tray\n              ? { ...s, ...update }\n              : s          );\n          const filtered = applyFilters(newShelves, filters);\n          setFilteredShelves(filtered);\n          return newShelves;\n        });\n      });\n    };\n    subscribe();\n    return () => { if (unsub) unsub(); };\n  }, [filters]);\n\n\n  // Xử lý thay đổi bộ lọc\n  const handleFilterChange = (type, value, newFilters) => {\n    // newFilters có thể được truyền từ FilterPanel, nếu không thì tự tạo\n    const nextFilters = newFilters || { ...filters, [type]: value };\n    setFilters(nextFilters);\n    const filtered = applyFilters(shelves, nextFilters);\n    setFilteredShelves(filtered);\n  };\n\n\n  if (loading) {\n    return <div className=\"loading\" role=\"status\">Đang tải dữ liệu...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\" role=\"alert\">Lỗi: {error}</div>;\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard-header\">\n        <h1 className=\"dashboard-title\">Warehouse Dashboard</h1>\n        <div className=\"user-info\">\n          <span className=\"user-name\">{user?.username || 'Admin'}</span>\n          <button className=\"logout-button\" onClick={onLogout}>\n            Đăng xuất\n          </button>\n        </div>\n      </div>      <FilterPanel \n        tiers={[...new Set(shelves.map(s => s.tier))].sort()}        statuses={['HIGH', 'MEDIUM', 'EMPTY']}\n        filters={filters}\n        onFilterChange={handleFilterChange}\n      />\n      \n      <ShelfGrid \n        shelves={filteredShelves}\n        onShelfClick={setSelectedShelf}\n      />\n      \n      {selectedShelf && (\n        <ShelfDetail \n          shelf={selectedShelf}\n          onClose={() => setSelectedShelf(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}