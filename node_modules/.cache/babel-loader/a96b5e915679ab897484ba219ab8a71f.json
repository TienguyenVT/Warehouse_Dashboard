{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents\\\\warehouse-dashboard\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// File: Dashboard.js\n// Mô tả: Component React chính hiển thị dashboard quản lý kho hàng.\n// Chức năng: Quản lý trạng thái, lọc, thống kê, hiển thị lưới kệ, chi tiết kệ, và đồng bộ dữ liệu mock cho toàn bộ hệ thống.\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { subscribeToShelfUpdates } from '../utils/mqtt';\nimport { shelf as shelfAPI } from '../utils/api'; // Import mock API\nimport './Dashboard.css';\nimport ShelfGrid from '../components/ShelfGrid/ShelfGrid';\nimport FilterPanel from '../components/FilterPanel/FilterPanel';\nimport ShelfDetail from '../components/ShelfDetail/ShelfDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  const [shelves, setShelves] = useState([]); // Danh sách kệ thô, chưa lọc\n  const [filteredShelves, setFilteredShelves] = useState([]); // Danh sách kệ đã lọc\n  const [selectedShelf, setSelectedShelf] = useState(null);\n  const [filters, setFilters] = useState({\n    tier: 'all',\n    status: 'all'\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const isMounted = useRef(true);\n\n  // useEffect chính cho việc khởi tạo, tải dữ liệu, và MQTT subscription\n  useEffect(() => {\n    isMounted.current = true;\n    const fetchInitialShelves = async () => {\n      try {\n        const data = await shelfAPI.fetchAll();\n        if (isMounted.current) {\n          setShelves(data);\n          // filteredShelves sẽ được cập nhật bởi useEffect [shelves, filters]\n          setLoading(false);\n        }\n      } catch (err) {\n        if (isMounted.current) {\n          setError(err.message);\n          setLoading(false);\n        }\n      }\n    };\n    fetchInitialShelves();\n    const unsubscribeFromMQTT = subscribeToShelfUpdates(update => {\n      if (isMounted.current) {\n        setShelves(prevShelves => prevShelves.map(s => s.tier === update.tier && s.tray === update.tray ? {\n          ...s,\n          ...update\n        } : s));\n      }\n    });\n    return () => {\n      isMounted.current = false;\n      if (unsubscribeFromMQTT) {\n        unsubscribeFromMQTT();\n      }\n    };\n  }, []); // Chạy một lần khi component mount\n\n  // useEffect cho việc lọc dữ liệu kệ\n  useEffect(() => {\n    if (loading) {\n      // Nếu đang tải dữ liệu ban đầu, chưa cần lọc\n      return;\n    }\n    let currentFilteredShelves = [...shelves];\n\n    // Lọc theo tầng (tier)\n    if (filters.tier !== 'all') {\n      currentFilteredShelves = currentFilteredShelves.filter(shelf => String(shelf.tier) === String(filters.tier));\n    }\n\n    // Lọc theo trạng thái (status)\n    if (filters.status !== 'all') {\n      currentFilteredShelves = currentFilteredShelves.filter(shelf => shelf.status === filters.status);\n    }\n    if (isMounted.current) {\n      setFilteredShelves(currentFilteredShelves);\n    }\n  }, [shelves, filters, loading]); // Chạy lại khi shelves, filters, hoặc loading thay đổi\n\n  // Xử lý thay đổi bộ lọc từ FilterPanel\n  const handleFilterChange = (filterType, value, newFiltersFromPanel) => {\n    setFilters(newFiltersFromPanel);\n  };\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"\\u0110ang t\\u1EA3i d\\u1EEF li\\u1EC7u...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"L\\u1ED7i: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Qu\\u1EA3n l\\xFD k\\u1EC7 h\\xE0ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: (user === null || user === void 0 ? void 0 : user.username) || 'Admin'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-button\",\n          children: \"\\u0110\\u0103ng xu\\u1EA5t\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FilterPanel, {\n      tiers: [...new Set(shelves.map(s => s.tier))].sort((a, b) => Number(a) - Number(b)) // Đảm bảo tiers được sắp xếp số\n      ,\n      statuses: ['HIGH', 'MEDIUM', 'EMPTY'],\n      filters: filters,\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ShelfGrid, {\n      shelves: filteredShelves,\n      onShelfClick: setSelectedShelf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), selectedShelf && /*#__PURE__*/_jsxDEV(ShelfDetail, {\n      shelf: selectedShelf,\n      onClose: () => setSelectedShelf(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"2hWZP1C0sV71HP4Zqlbg/JLs9u8=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useAuth","subscribeToShelfUpdates","shelf","shelfAPI","ShelfGrid","FilterPanel","ShelfDetail","jsxDEV","_jsxDEV","Dashboard","_s","user","logout","navigate","shelves","setShelves","filteredShelves","setFilteredShelves","selectedShelf","setSelectedShelf","filters","setFilters","tier","status","loading","setLoading","error","setError","isMounted","current","fetchInitialShelves","data","fetchAll","err","message","unsubscribeFromMQTT","update","prevShelves","map","s","tray","currentFilteredShelves","filter","String","handleFilterChange","filterType","value","newFiltersFromPanel","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","onClick","tiers","Set","sort","a","b","Number","statuses","onFilterChange","onShelfClick","onClose","_c","$RefreshReg$"],"sources":["C:/Documents/warehouse-dashboard/src/pages/Dashboard.js"],"sourcesContent":["// File: Dashboard.js\n// Mô tả: Component React chính hiển thị dashboard quản lý kho hàng.\n// Chức năng: Quản lý trạng thái, lọc, thống kê, hiển thị lưới kệ, chi tiết kệ, và đồng bộ dữ liệu mock cho toàn bộ hệ thống.\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { subscribeToShelfUpdates } from '../utils/mqtt';\nimport { shelf as shelfAPI } from '../utils/api'; // Import mock API\nimport './Dashboard.css';\nimport ShelfGrid from '../components/ShelfGrid/ShelfGrid';\nimport FilterPanel from '../components/FilterPanel/FilterPanel';\nimport ShelfDetail from '../components/ShelfDetail/ShelfDetail';\n\nconst Dashboard = () => {\n    const { user, logout } = useAuth();\n    const navigate = useNavigate();\n    const [shelves, setShelves] = useState([]); // Danh sách kệ thô, chưa lọc\n    const [filteredShelves, setFilteredShelves] = useState([]); // Danh sách kệ đã lọc\n    const [selectedShelf, setSelectedShelf] = useState(null);\n    const [filters, setFilters] = useState({ tier: 'all', status: 'all' });\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const isMounted = useRef(true);\n\n    // useEffect chính cho việc khởi tạo, tải dữ liệu, và MQTT subscription\n    useEffect(() => {\n        isMounted.current = true;\n\n        const fetchInitialShelves = async () => {\n            try {\n                const data = await shelfAPI.fetchAll();\n                if (isMounted.current) {\n                    setShelves(data);\n                    // filteredShelves sẽ được cập nhật bởi useEffect [shelves, filters]\n                    setLoading(false);\n                }\n            } catch (err) {\n                if (isMounted.current) {\n                    setError(err.message);\n                    setLoading(false);\n                }\n            }\n        };\n\n        fetchInitialShelves();\n\n        const unsubscribeFromMQTT = subscribeToShelfUpdates((update) => {\n            if (isMounted.current) {\n                setShelves(prevShelves =>\n                    prevShelves.map(s =>\n                        s.tier === update.tier && s.tray === update.tray\n                            ? { ...s, ...update }\n                            : s\n                    )\n                );\n            }\n        });\n\n        return () => {\n            isMounted.current = false;\n            if (unsubscribeFromMQTT) {\n                unsubscribeFromMQTT();\n            }\n        };\n    }, []); // Chạy một lần khi component mount\n\n    // useEffect cho việc lọc dữ liệu kệ\n    useEffect(() => {\n        if (loading) { // Nếu đang tải dữ liệu ban đầu, chưa cần lọc\n            return;\n        }\n\n        let currentFilteredShelves = [...shelves];\n\n        // Lọc theo tầng (tier)\n        if (filters.tier !== 'all') {\n            currentFilteredShelves = currentFilteredShelves.filter(\n                shelf => String(shelf.tier) === String(filters.tier)\n            );\n        }\n\n        // Lọc theo trạng thái (status)\n        if (filters.status !== 'all') {\n            currentFilteredShelves = currentFilteredShelves.filter(\n                shelf => shelf.status === filters.status\n            );\n        }\n        \n        if (isMounted.current) {\n            setFilteredShelves(currentFilteredShelves);\n        }\n    }, [shelves, filters, loading]); // Chạy lại khi shelves, filters, hoặc loading thay đổi\n\n    // Xử lý thay đổi bộ lọc từ FilterPanel\n    const handleFilterChange = (filterType, value, newFiltersFromPanel) => {\n        setFilters(newFiltersFromPanel);\n    };\n\n    const handleLogout = () => {\n        logout();\n        navigate('/login');\n    };\n\n    if (loading) {\n        return <div className=\"loading\">Đang tải dữ liệu...</div>;\n    }\n\n    if (error) {\n        return <div className=\"error\">Lỗi: {error}</div>;\n    }\n\n    return (\n        <div className=\"dashboard\">\n            <div className=\"dashboard-header\">\n                <h1>Quản lý kệ hàng</h1>\n                <div className=\"user-info\">\n                    <span>{user?.username || 'Admin'}</span>\n                    <button onClick={handleLogout} className=\"logout-button\">\n                        Đăng xuất\n                    </button>\n                </div>\n            </div>\n\n            <FilterPanel \n                tiers={[...new Set(shelves.map(s => s.tier))].sort((a, b) => Number(a) - Number(b))} // Đảm bảo tiers được sắp xếp số\n                statuses={['HIGH', 'MEDIUM', 'EMPTY']}\n                filters={filters}\n                onFilterChange={handleFilterChange}\n            />\n            \n            <ShelfGrid \n                shelves={filteredShelves}\n                onShelfClick={setSelectedShelf}\n            />\n            \n            {selectedShelf && (\n                <ShelfDetail \n                    shelf={selectedShelf}\n                    onClose={() => setSelectedShelf(null)}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}