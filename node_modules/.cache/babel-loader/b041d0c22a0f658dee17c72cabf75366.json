{"ast":null,"code":"var __extends = this && this.t || function () {\n  var extendStatics = function (t, r) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (t, r) {\n      t.__proto__ = r;\n    } || function (t, r) {\n      for (var n in r) if (Object.prototype.hasOwnProperty.call(r, n)) t[n] = r[n];\n    };\n    return extendStatics(t, r);\n  };\n  return function (t, r) {\n    if (typeof r !== \"function\" && r !== null) throw new TypeError(\"Class extends value \" + String(r) + \" is not a constructor or null\");\n    extendStatics(t, r);\n    function __() {\n      this.constructor = t;\n    }\n    t.prototype = r === null ? Object.create(r) : (__.prototype = r.prototype, new __());\n  };\n}();\nvar __generator = this && this.i || function (t, r) {\n  var n = {\n      label: 0,\n      sent: function () {\n        if (a[0] & 1) throw a[1];\n        return a[1];\n      },\n      trys: [],\n      ops: []\n    },\n    e,\n    i,\n    a,\n    s;\n  return s = {\n    next: verb(0),\n    throw: verb(1),\n    return: verb(2)\n  }, typeof Symbol === \"function\" && (s[Symbol.iterator] = function () {\n    return this;\n  }), s;\n  function verb(t) {\n    return function (r) {\n      return step([t, r]);\n    };\n  }\n  function step(s) {\n    if (e) throw new TypeError(\"Generator is already executing.\");\n    while (n) try {\n      if (e = 1, i && (a = s[0] & 2 ? i[\"return\"] : s[0] ? i[\"throw\"] || ((a = i[\"return\"]) && a.call(i), 0) : i.next) && !(a = a.call(i, s[1])).done) return a;\n      if (i = 0, a) s = [s[0] & 2, a.value];\n      switch (s[0]) {\n        case 0:\n        case 1:\n          a = s;\n          break;\n        case 4:\n          n.label++;\n          return {\n            value: s[1],\n            done: false\n          };\n        case 5:\n          n.label++;\n          i = s[1];\n          s = [0];\n          continue;\n        case 7:\n          s = n.ops.pop();\n          n.trys.pop();\n          continue;\n        default:\n          if (!(a = n.trys, a = a.length > 0 && a[a.length - 1]) && (s[0] === 6 || s[0] === 2)) {\n            n = 0;\n            continue;\n          }\n          if (s[0] === 3 && (!a || s[1] > a[0] && s[1] < a[3])) {\n            n.label = s[1];\n            break;\n          }\n          if (s[0] === 6 && n.label < a[1]) {\n            n.label = a[1];\n            a = s;\n            break;\n          }\n          if (a && n.label < a[2]) {\n            n.label = a[2];\n            n.ops.push(s);\n            break;\n          }\n          if (a[2]) n.ops.pop();\n          n.trys.pop();\n          continue;\n      }\n      s = r.call(t, n);\n    } catch (t) {\n      s = [6, t];\n      i = 0;\n    } finally {\n      e = a = 0;\n    }\n    if (s[0] & 5) throw s[1];\n    return {\n      value: s[0] ? s[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { HashContainer, HashContainerIterator } from \"./Base\";\nimport checkObject from \"../../utils/checkObject\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nvar HashMapIterator = function (t) {\n  __extends(HashMapIterator, t);\n  function HashMapIterator(r, n, e, i) {\n    var a = t.call(this, r, n, i) || this;\n    a.container = e;\n    return a;\n  }\n  Object.defineProperty(HashMapIterator.prototype, \"pointer\", {\n    get: function () {\n      if (this.o === this.h) {\n        throwIteratorAccessError();\n      }\n      var t = this;\n      return new Proxy([], {\n        get: function (r, n) {\n          if (n === \"0\") return t.o.u;else if (n === \"1\") return t.o.p;\n        },\n        set: function (r, n, e) {\n          if (n !== \"1\") {\n            throw new TypeError(\"props must be 1\");\n          }\n          t.o.p = e;\n          return true;\n        }\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  HashMapIterator.prototype.copy = function () {\n    return new HashMapIterator(this.o, this.h, this.container, this.iteratorType);\n  };\n  return HashMapIterator;\n}(HashContainerIterator);\nvar HashMap = function (t) {\n  __extends(HashMap, t);\n  function HashMap(r) {\n    if (r === void 0) {\n      r = [];\n    }\n    var n = t.call(this) || this;\n    var e = n;\n    r.forEach(function (t) {\n      e.setElement(t[0], t[1]);\n    });\n    return n;\n  }\n  HashMap.prototype.begin = function () {\n    return new HashMapIterator(this.H, this.h, this);\n  };\n  HashMap.prototype.end = function () {\n    return new HashMapIterator(this.h, this.h, this);\n  };\n  HashMap.prototype.rBegin = function () {\n    return new HashMapIterator(this.l, this.h, this, 1);\n  };\n  HashMap.prototype.rEnd = function () {\n    return new HashMapIterator(this.h, this.h, this, 1);\n  };\n  HashMap.prototype.front = function () {\n    if (this.M === 0) return;\n    return [this.H.u, this.H.p];\n  };\n  HashMap.prototype.back = function () {\n    if (this.M === 0) return;\n    return [this.l.u, this.l.p];\n  };\n  HashMap.prototype.setElement = function (t, r, n) {\n    return this.v(t, r, n);\n  };\n  HashMap.prototype.getElementByKey = function (t, r) {\n    if (r === undefined) r = checkObject(t);\n    if (r) {\n      var n = t[this.HASH_TAG];\n      return n !== undefined ? this._[n].p : undefined;\n    }\n    var e = this.I[t];\n    return e ? e.p : undefined;\n  };\n  HashMap.prototype.getElementByPos = function (t) {\n    if (t < 0 || t > this.M - 1) {\n      throw new RangeError();\n    }\n    var r = this.H;\n    while (t--) {\n      r = r.m;\n    }\n    return [r.u, r.p];\n  };\n  HashMap.prototype.find = function (t, r) {\n    var n = this.g(t, r);\n    return new HashMapIterator(n, this.h, this);\n  };\n  HashMap.prototype.forEach = function (t) {\n    var r = 0;\n    var n = this.H;\n    while (n !== this.h) {\n      t([n.u, n.p], r++, this);\n      n = n.m;\n    }\n  };\n  HashMap.prototype[Symbol.iterator] = function () {\n    return function () {\n      var t;\n      return __generator(this, function (r) {\n        switch (r.label) {\n          case 0:\n            t = this.H;\n            r.label = 1;\n          case 1:\n            if (!(t !== this.h)) return [3, 3];\n            return [4, [t.u, t.p]];\n          case 2:\n            r.sent();\n            t = t.m;\n            return [3, 1];\n          case 3:\n            return [2];\n        }\n      });\n    }.bind(this)();\n  };\n  return HashMap;\n}(HashContainer);\nexport default HashMap;","map":{"version":3,"sources":["container/HashContainer/HashMap.js","../../src/container/HashContainer/HashMap.ts"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","throw","return","Symbol","iterator","n","v","step","op","done","value","pop","length","push","e","_this","get","enumerable","configurable","node","_a","HashContainer","HashContainerIterator","checkObject","throwIteratorAccessError","RangeError","header","container","iteratorType","_super","HashMapIterator","_node","_header","self","Proxy","props","_key","_value","set","newValue","forEach","el","setElement","HashMap","_head","_tail","_length","key","isObject","_set","undefined","index","HASH_TAG","_objMap","_originMap","pos","_next","_findElementNode","callback","bind"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { HashContainer, HashContainerIterator } from \"./Base\";\nimport checkObject from \"../../utils/checkObject\";\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nvar HashMapIterator = /** @class */ (function (_super) {\n    __extends(HashMapIterator, _super);\n    function HashMapIterator(node, header, container, iteratorType) {\n        var _this = _super.call(this, node, header, iteratorType) || this;\n        _this.container = container;\n        return _this;\n    }\n    Object.defineProperty(HashMapIterator.prototype, \"pointer\", {\n        get: function () {\n            if (this._node === this._header) {\n                throwIteratorAccessError();\n            }\n            var self = this;\n            return new Proxy([], {\n                get: function (_, props) {\n                    if (props === '0')\n                        return self._node._key;\n                    else if (props === '1')\n                        return self._node._value;\n                },\n                set: function (_, props, newValue) {\n                    if (props !== '1') {\n                        throw new TypeError('props must be 1');\n                    }\n                    self._node._value = newValue;\n                    return true;\n                }\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HashMapIterator.prototype.copy = function () {\n        return new HashMapIterator(this._node, this._header, this.container, this.iteratorType);\n    };\n    return HashMapIterator;\n}(HashContainerIterator));\nvar HashMap = /** @class */ (function (_super) {\n    __extends(HashMap, _super);\n    function HashMap(container) {\n        if (container === void 0) { container = []; }\n        var _this = _super.call(this) || this;\n        var self = _this;\n        container.forEach(function (el) {\n            self.setElement(el[0], el[1]);\n        });\n        return _this;\n    }\n    HashMap.prototype.begin = function () {\n        return new HashMapIterator(this._head, this._header, this);\n    };\n    HashMap.prototype.end = function () {\n        return new HashMapIterator(this._header, this._header, this);\n    };\n    HashMap.prototype.rBegin = function () {\n        return new HashMapIterator(this._tail, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    HashMap.prototype.rEnd = function () {\n        return new HashMapIterator(this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    HashMap.prototype.front = function () {\n        if (this._length === 0)\n            return;\n        return [this._head._key, this._head._value];\n    };\n    HashMap.prototype.back = function () {\n        if (this._length === 0)\n            return;\n        return [this._tail._key, this._tail._value];\n    };\n    /**\n     * @description Insert a key-value pair or set value by the given key.\n     * @param key - The key want to insert.\n     * @param value - The value want to set.\n     * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n     *                   If a `undefined` value is passed in, the type will be automatically judged.\n     * @returns The size of container after setting.\n     */\n    HashMap.prototype.setElement = function (key, value, isObject) {\n        return this._set(key, value, isObject);\n    };\n    /**\n     * @description Get the value of the element of the specified key.\n     * @param key - The key want to search.\n     * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n     *                   If a `undefined` value is passed in, the type will be automatically judged.\n     * @example\n     * const val = container.getElementByKey(1);\n     */\n    HashMap.prototype.getElementByKey = function (key, isObject) {\n        if (isObject === undefined)\n            isObject = checkObject(key);\n        if (isObject) {\n            var index = key[this.HASH_TAG];\n            return index !== undefined ? this._objMap[index]._value : undefined;\n        }\n        var node = this._originMap[key];\n        return node ? node._value : undefined;\n    };\n    HashMap.prototype.getElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var node = this._head;\n        while (pos--) {\n            node = node._next;\n        }\n        return [node._key, node._value];\n    };\n    /**\n     * @description Check key if exist in container.\n     * @param key - The element you want to search.\n     * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n     *                   If a `undefined` value is passed in, the type will be automatically judged.\n     * @returns An iterator pointing to the element if found, or super end if not found.\n     */\n    HashMap.prototype.find = function (key, isObject) {\n        var node = this._findElementNode(key, isObject);\n        return new HashMapIterator(node, this._header, this);\n    };\n    HashMap.prototype.forEach = function (callback) {\n        var index = 0;\n        var node = this._head;\n        while (node !== this._header) {\n            callback([node._key, node._value], index++, this);\n            node = node._next;\n        }\n    };\n    HashMap.prototype[Symbol.iterator] = function () {\n        return function () {\n            var node;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        node = this._head;\n                        _a.label = 1;\n                    case 1:\n                        if (!(node !== this._header)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, [node._key, node._value]];\n                    case 2:\n                        _a.sent();\n                        node = node._next;\n                        return [3 /*break*/, 1];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }.bind(this)();\n    };\n    return HashMap;\n}(HashContainer));\nexport default HashMap;\n","import { initContainer, IteratorType } from '@/container/ContainerBase';\nimport { HashContainer, HashContainerIterator, HashLinkNode } from '@/container/HashContainer/Base';\nimport checkObject from '@/utils/checkObject';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nclass HashMapIterator<K, V> extends HashContainerIterator<K, V> {\n  readonly container: HashMap<K, V>;\n  constructor(\n    node: HashLinkNode<K, V>,\n    header: HashLinkNode<K, V>,\n    container: HashMap<K, V>,\n    iteratorType?: IteratorType\n  ) {\n    super(node, header, iteratorType);\n    this.container = container;\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    const self = this;\n    return new Proxy(<[K, V]><unknown>[], {\n      get(_, props: '0' | '1') {\n        if (props === '0') return self._node._key;\n        else if (props === '1') return self._node._value;\n      },\n      set(_, props: '1', newValue: V) {\n        if (props !== '1') {\n          throw new TypeError('props must be 1');\n        }\n        self._node._value = newValue;\n        return true;\n      }\n    });\n  }\n  copy() {\n    return new HashMapIterator<K, V>(this._node, this._header, this.container, this.iteratorType);\n  }\n  // @ts-ignore\n  equals(iter: HashMapIterator<K, V>): boolean;\n}\n\nexport type { HashMapIterator };\n\nclass HashMap<K, V> extends HashContainer<K, V> {\n  constructor(container: initContainer<[K, V]> = []) {\n    super();\n    const self = this;\n    container.forEach(function (el) {\n      self.setElement(el[0], el[1]);\n    });\n  }\n  begin() {\n    return new HashMapIterator<K, V>(this._head, this._header, this);\n  }\n  end() {\n    return new HashMapIterator<K, V>(this._header, this._header, this);\n  }\n  rBegin() {\n    return new HashMapIterator<K, V>(this._tail, this._header, this, IteratorType.REVERSE);\n  }\n  rEnd() {\n    return new HashMapIterator<K, V>(this._header, this._header, this, IteratorType.REVERSE);\n  }\n  front() {\n    if (this._length === 0) return;\n    return <[K, V]>[this._head._key, this._head._value];\n  }\n  back() {\n    if (this._length === 0) return;\n    return <[K, V]>[this._tail._key, this._tail._value];\n  }\n  /**\n   * @description Insert a key-value pair or set value by the given key.\n   * @param key - The key want to insert.\n   * @param value - The value want to set.\n   * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n   *                   If a `undefined` value is passed in, the type will be automatically judged.\n   * @returns The size of container after setting.\n   */\n  setElement(key: K, value: V, isObject?: boolean) {\n    return this._set(key, value, isObject);\n  }\n  /**\n   * @description Get the value of the element of the specified key.\n   * @param key - The key want to search.\n   * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n   *                   If a `undefined` value is passed in, the type will be automatically judged.\n   * @example\n   * const val = container.getElementByKey(1);\n   */\n  getElementByKey(key: K, isObject?: boolean) {\n    if (isObject === undefined) isObject = checkObject(key);\n    if (isObject) {\n      const index = (<Record<symbol, number>><unknown>key)[this.HASH_TAG];\n      return index !== undefined ? this._objMap[index]._value : undefined;\n    }\n    const node = this._originMap[<string><unknown>key];\n    return node ? node._value : undefined;\n  }\n  getElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let node = this._head;\n    while (pos--) {\n      node = node._next;\n    }\n    return <[K, V]>[node._key, node._value];\n  }\n  /**\n   * @description Check key if exist in container.\n   * @param key - The element you want to search.\n   * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n   *                   If a `undefined` value is passed in, the type will be automatically judged.\n   * @returns An iterator pointing to the element if found, or super end if not found.\n   */\n  find(key: K, isObject?: boolean) {\n    const node = this._findElementNode(key, isObject);\n    return new HashMapIterator<K, V>(node, this._header, this);\n  }\n  forEach(callback: (element: [K, V], index: number, hashMap: HashMap<K, V>) => void) {\n    let index = 0;\n    let node = this._head;\n    while (node !== this._header) {\n      callback(<[K, V]>[node._key, node._value], index++, this);\n      node = node._next;\n    }\n  }\n  [Symbol.iterator]() {\n    return function * (this: HashMap<K, V>) {\n      let node = this._head;\n      while (node !== this._header) {\n        yield <[K, V]>[node._key, node._value];\n        node = node._next;\n      }\n    }.bind(this)();\n  }\n}\n\nexport default HashMap;\n"]},"metadata":{},"sourceType":"module"}