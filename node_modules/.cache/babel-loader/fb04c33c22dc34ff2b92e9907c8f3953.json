{"ast":null,"code":"var __extends = this && this.t || function () {\n  var extendStatics = function (t, i) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (t, i) {\n      t.__proto__ = i;\n    } || function (t, i) {\n      for (var r in i) if (Object.prototype.hasOwnProperty.call(i, r)) t[r] = i[r];\n    };\n    return extendStatics(t, i);\n  };\n  return function (t, i) {\n    if (typeof i !== \"function\" && i !== null) throw new TypeError(\"Class extends value \" + String(i) + \" is not a constructor or null\");\n    extendStatics(t, i);\n    function __() {\n      this.constructor = t;\n    }\n    t.prototype = i === null ? Object.create(i) : (__.prototype = i.prototype, new __());\n  };\n}();\nvar __generator = this && this.i || function (t, i) {\n  var r = {\n      label: 0,\n      sent: function () {\n        if (e[0] & 1) throw e[1];\n        return e[1];\n      },\n      trys: [],\n      ops: []\n    },\n    n,\n    s,\n    e,\n    h;\n  return h = {\n    next: verb(0),\n    throw: verb(1),\n    return: verb(2)\n  }, typeof Symbol === \"function\" && (h[Symbol.iterator] = function () {\n    return this;\n  }), h;\n  function verb(t) {\n    return function (i) {\n      return step([t, i]);\n    };\n  }\n  function step(h) {\n    if (n) throw new TypeError(\"Generator is already executing.\");\n    while (r) try {\n      if (n = 1, s && (e = h[0] & 2 ? s[\"return\"] : h[0] ? s[\"throw\"] || ((e = s[\"return\"]) && e.call(s), 0) : s.next) && !(e = e.call(s, h[1])).done) return e;\n      if (s = 0, e) h = [h[0] & 2, e.value];\n      switch (h[0]) {\n        case 0:\n        case 1:\n          e = h;\n          break;\n        case 4:\n          r.label++;\n          return {\n            value: h[1],\n            done: false\n          };\n        case 5:\n          r.label++;\n          s = h[1];\n          h = [0];\n          continue;\n        case 7:\n          h = r.ops.pop();\n          r.trys.pop();\n          continue;\n        default:\n          if (!(e = r.trys, e = e.length > 0 && e[e.length - 1]) && (h[0] === 6 || h[0] === 2)) {\n            r = 0;\n            continue;\n          }\n          if (h[0] === 3 && (!e || h[1] > e[0] && h[1] < e[3])) {\n            r.label = h[1];\n            break;\n          }\n          if (h[0] === 6 && r.label < e[1]) {\n            r.label = e[1];\n            e = h;\n            break;\n          }\n          if (e && r.label < e[2]) {\n            r.label = e[2];\n            r.ops.push(h);\n            break;\n          }\n          if (e[2]) r.ops.pop();\n          r.trys.pop();\n          continue;\n      }\n      h = i.call(t, r);\n    } catch (t) {\n      h = [6, t];\n      s = 0;\n    } finally {\n      n = e = 0;\n    }\n    if (h[0] & 5) throw h[1];\n    return {\n      value: h[0] ? h[1] : void 0,\n      done: true\n    };\n  }\n};\nimport SequentialContainer from \"./Base\";\nimport { ContainerIterator } from \"../ContainerBase\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nvar LinkListIterator = function (t) {\n  __extends(LinkListIterator, t);\n  function LinkListIterator(i, r, n, s) {\n    var e = t.call(this, s) || this;\n    e.o = i;\n    e.h = r;\n    e.container = n;\n    if (e.iteratorType === 0) {\n      e.pre = function () {\n        if (this.o.L === this.h) {\n          throwIteratorAccessError();\n        }\n        this.o = this.o.L;\n        return this;\n      };\n      e.next = function () {\n        if (this.o === this.h) {\n          throwIteratorAccessError();\n        }\n        this.o = this.o.m;\n        return this;\n      };\n    } else {\n      e.pre = function () {\n        if (this.o.m === this.h) {\n          throwIteratorAccessError();\n        }\n        this.o = this.o.m;\n        return this;\n      };\n      e.next = function () {\n        if (this.o === this.h) {\n          throwIteratorAccessError();\n        }\n        this.o = this.o.L;\n        return this;\n      };\n    }\n    return e;\n  }\n  Object.defineProperty(LinkListIterator.prototype, \"pointer\", {\n    get: function () {\n      if (this.o === this.h) {\n        throwIteratorAccessError();\n      }\n      return this.o.p;\n    },\n    set: function (t) {\n      if (this.o === this.h) {\n        throwIteratorAccessError();\n      }\n      this.o.p = t;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  LinkListIterator.prototype.copy = function () {\n    return new LinkListIterator(this.o, this.h, this.container, this.iteratorType);\n  };\n  return LinkListIterator;\n}(ContainerIterator);\nvar LinkList = function (t) {\n  __extends(LinkList, t);\n  function LinkList(i) {\n    if (i === void 0) {\n      i = [];\n    }\n    var r = t.call(this) || this;\n    r.h = {};\n    r.H = r.l = r.h.L = r.h.m = r.h;\n    var n = r;\n    i.forEach(function (t) {\n      n.pushBack(t);\n    });\n    return r;\n  }\n  LinkList.prototype.G = function (t) {\n    var i = t.L,\n      r = t.m;\n    i.m = r;\n    r.L = i;\n    if (t === this.H) {\n      this.H = r;\n    }\n    if (t === this.l) {\n      this.l = i;\n    }\n    this.M -= 1;\n  };\n  LinkList.prototype.F = function (t, i) {\n    var r = i.m;\n    var n = {\n      p: t,\n      L: i,\n      m: r\n    };\n    i.m = n;\n    r.L = n;\n    if (i === this.h) {\n      this.H = n;\n    }\n    if (r === this.h) {\n      this.l = n;\n    }\n    this.M += 1;\n  };\n  LinkList.prototype.clear = function () {\n    this.M = 0;\n    this.H = this.l = this.h.L = this.h.m = this.h;\n  };\n  LinkList.prototype.begin = function () {\n    return new LinkListIterator(this.H, this.h, this);\n  };\n  LinkList.prototype.end = function () {\n    return new LinkListIterator(this.h, this.h, this);\n  };\n  LinkList.prototype.rBegin = function () {\n    return new LinkListIterator(this.l, this.h, this, 1);\n  };\n  LinkList.prototype.rEnd = function () {\n    return new LinkListIterator(this.h, this.h, this, 1);\n  };\n  LinkList.prototype.front = function () {\n    return this.H.p;\n  };\n  LinkList.prototype.back = function () {\n    return this.l.p;\n  };\n  LinkList.prototype.getElementByPos = function (t) {\n    if (t < 0 || t > this.M - 1) {\n      throw new RangeError();\n    }\n    var i = this.H;\n    while (t--) {\n      i = i.m;\n    }\n    return i.p;\n  };\n  LinkList.prototype.eraseElementByPos = function (t) {\n    if (t < 0 || t > this.M - 1) {\n      throw new RangeError();\n    }\n    var i = this.H;\n    while (t--) {\n      i = i.m;\n    }\n    this.G(i);\n    return this.M;\n  };\n  LinkList.prototype.eraseElementByValue = function (t) {\n    var i = this.H;\n    while (i !== this.h) {\n      if (i.p === t) {\n        this.G(i);\n      }\n      i = i.m;\n    }\n    return this.M;\n  };\n  LinkList.prototype.eraseElementByIterator = function (t) {\n    var i = t.o;\n    if (i === this.h) {\n      throwIteratorAccessError();\n    }\n    t = t.next();\n    this.G(i);\n    return t;\n  };\n  LinkList.prototype.pushBack = function (t) {\n    this.F(t, this.l);\n    return this.M;\n  };\n  LinkList.prototype.popBack = function () {\n    if (this.M === 0) return;\n    var t = this.l.p;\n    this.G(this.l);\n    return t;\n  };\n  LinkList.prototype.pushFront = function (t) {\n    this.F(t, this.h);\n    return this.M;\n  };\n  LinkList.prototype.popFront = function () {\n    if (this.M === 0) return;\n    var t = this.H.p;\n    this.G(this.H);\n    return t;\n  };\n  LinkList.prototype.setElementByPos = function (t, i) {\n    if (t < 0 || t > this.M - 1) {\n      throw new RangeError();\n    }\n    var r = this.H;\n    while (t--) {\n      r = r.m;\n    }\n    r.p = i;\n  };\n  LinkList.prototype.insert = function (t, i, r) {\n    if (r === void 0) {\n      r = 1;\n    }\n    if (t < 0 || t > this.M) {\n      throw new RangeError();\n    }\n    if (r <= 0) return this.M;\n    if (t === 0) {\n      while (r--) this.pushFront(i);\n    } else if (t === this.M) {\n      while (r--) this.pushBack(i);\n    } else {\n      var n = this.H;\n      for (var s = 1; s < t; ++s) {\n        n = n.m;\n      }\n      var e = n.m;\n      this.M += r;\n      while (r--) {\n        n.m = {\n          p: i,\n          L: n\n        };\n        n.m.L = n;\n        n = n.m;\n      }\n      n.m = e;\n      e.L = n;\n    }\n    return this.M;\n  };\n  LinkList.prototype.find = function (t) {\n    var i = this.H;\n    while (i !== this.h) {\n      if (i.p === t) {\n        return new LinkListIterator(i, this.h, this);\n      }\n      i = i.m;\n    }\n    return this.end();\n  };\n  LinkList.prototype.reverse = function () {\n    if (this.M <= 1) return;\n    var t = this.H;\n    var i = this.l;\n    var r = 0;\n    while (r << 1 < this.M) {\n      var n = t.p;\n      t.p = i.p;\n      i.p = n;\n      t = t.m;\n      i = i.L;\n      r += 1;\n    }\n  };\n  LinkList.prototype.unique = function () {\n    if (this.M <= 1) {\n      return this.M;\n    }\n    var t = this.H;\n    while (t !== this.h) {\n      var i = t;\n      while (i.m !== this.h && i.p === i.m.p) {\n        i = i.m;\n        this.M -= 1;\n      }\n      t.m = i.m;\n      t.m.L = t;\n      t = t.m;\n    }\n    return this.M;\n  };\n  LinkList.prototype.sort = function (t) {\n    if (this.M <= 1) return;\n    var i = [];\n    this.forEach(function (t) {\n      i.push(t);\n    });\n    i.sort(t);\n    var r = this.H;\n    i.forEach(function (t) {\n      r.p = t;\n      r = r.m;\n    });\n  };\n  LinkList.prototype.merge = function (t) {\n    var i = this;\n    if (this.M === 0) {\n      t.forEach(function (t) {\n        i.pushBack(t);\n      });\n    } else {\n      var r = this.H;\n      t.forEach(function (t) {\n        while (r !== i.h && r.p <= t) {\n          r = r.m;\n        }\n        i.F(t, r.L);\n      });\n    }\n    return this.M;\n  };\n  LinkList.prototype.forEach = function (t) {\n    var i = this.H;\n    var r = 0;\n    while (i !== this.h) {\n      t(i.p, r++, this);\n      i = i.m;\n    }\n  };\n  LinkList.prototype[Symbol.iterator] = function () {\n    return function () {\n      var t;\n      return __generator(this, function (i) {\n        switch (i.label) {\n          case 0:\n            if (this.M === 0) return [2];\n            t = this.H;\n            i.label = 1;\n          case 1:\n            if (!(t !== this.h)) return [3, 3];\n            return [4, t.p];\n          case 2:\n            i.sent();\n            t = t.m;\n            return [3, 1];\n          case 3:\n            return [2];\n        }\n      });\n    }.bind(this)();\n  };\n  return LinkList;\n}(SequentialContainer);\nexport default LinkList;","map":{"version":3,"sources":["container/SequentialContainer/LinkList.js","../../src/container/SequentialContainer/LinkList.ts"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","throw","return","Symbol","iterator","n","v","step","op","done","value","pop","length","push","e","_this","get","set","enumerable","configurable","curNode","_a","SequentialContainer","ContainerIterator","throwIteratorAccessError","RangeError","_node","_header","container","iteratorType","_super","pre","_pre","_next","LinkListIterator","_value","newValue","_head","_tail","self","forEach","el","pushBack","LinkList","node","_length","pos","_eraseNode","iter","element","_insertNode","num","pushFront","i","end","pHead","pTail","cnt","tmp","tmpNode","cmp","arr","sort","list","curNode_1","callback","index","bind"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport SequentialContainer from './Base';\nimport { ContainerIterator } from \"../ContainerBase\";\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nvar LinkListIterator = /** @class */ (function (_super) {\n    __extends(LinkListIterator, _super);\n    /**\n     * @internal\n     */\n    function LinkListIterator(_node, _header, container, iteratorType) {\n        var _this = _super.call(this, iteratorType) || this;\n        _this._node = _node;\n        _this._header = _header;\n        _this.container = container;\n        if (_this.iteratorType === 0 /* IteratorType.NORMAL */) {\n            _this.pre = function () {\n                if (this._node._pre === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._pre;\n                return this;\n            };\n            _this.next = function () {\n                if (this._node === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._next;\n                return this;\n            };\n        }\n        else {\n            _this.pre = function () {\n                if (this._node._next === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._next;\n                return this;\n            };\n            _this.next = function () {\n                if (this._node === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._pre;\n                return this;\n            };\n        }\n        return _this;\n    }\n    Object.defineProperty(LinkListIterator.prototype, \"pointer\", {\n        get: function () {\n            if (this._node === this._header) {\n                throwIteratorAccessError();\n            }\n            return this._node._value;\n        },\n        set: function (newValue) {\n            if (this._node === this._header) {\n                throwIteratorAccessError();\n            }\n            this._node._value = newValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LinkListIterator.prototype.copy = function () {\n        return new LinkListIterator(this._node, this._header, this.container, this.iteratorType);\n    };\n    return LinkListIterator;\n}(ContainerIterator));\nvar LinkList = /** @class */ (function (_super) {\n    __extends(LinkList, _super);\n    function LinkList(container) {\n        if (container === void 0) { container = []; }\n        var _this = _super.call(this) || this;\n        _this._header = {};\n        _this._head = _this._tail = _this._header._pre = _this._header._next = _this._header;\n        var self = _this;\n        container.forEach(function (el) {\n            self.pushBack(el);\n        });\n        return _this;\n    }\n    /**\n     * @internal\n     */\n    LinkList.prototype._eraseNode = function (node) {\n        var _pre = node._pre, _next = node._next;\n        _pre._next = _next;\n        _next._pre = _pre;\n        if (node === this._head) {\n            this._head = _next;\n        }\n        if (node === this._tail) {\n            this._tail = _pre;\n        }\n        this._length -= 1;\n    };\n    /**\n     * @internal\n     */\n    LinkList.prototype._insertNode = function (value, pre) {\n        var next = pre._next;\n        var node = {\n            _value: value,\n            _pre: pre,\n            _next: next\n        };\n        pre._next = node;\n        next._pre = node;\n        if (pre === this._header) {\n            this._head = node;\n        }\n        if (next === this._header) {\n            this._tail = node;\n        }\n        this._length += 1;\n    };\n    LinkList.prototype.clear = function () {\n        this._length = 0;\n        this._head = this._tail = this._header._pre = this._header._next = this._header;\n    };\n    LinkList.prototype.begin = function () {\n        return new LinkListIterator(this._head, this._header, this);\n    };\n    LinkList.prototype.end = function () {\n        return new LinkListIterator(this._header, this._header, this);\n    };\n    LinkList.prototype.rBegin = function () {\n        return new LinkListIterator(this._tail, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    LinkList.prototype.rEnd = function () {\n        return new LinkListIterator(this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    LinkList.prototype.front = function () {\n        return this._head._value;\n    };\n    LinkList.prototype.back = function () {\n        return this._tail._value;\n    };\n    LinkList.prototype.getElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var curNode = this._head;\n        while (pos--) {\n            curNode = curNode._next;\n        }\n        return curNode._value;\n    };\n    LinkList.prototype.eraseElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var curNode = this._head;\n        while (pos--) {\n            curNode = curNode._next;\n        }\n        this._eraseNode(curNode);\n        return this._length;\n    };\n    LinkList.prototype.eraseElementByValue = function (_value) {\n        var curNode = this._head;\n        while (curNode !== this._header) {\n            if (curNode._value === _value) {\n                this._eraseNode(curNode);\n            }\n            curNode = curNode._next;\n        }\n        return this._length;\n    };\n    LinkList.prototype.eraseElementByIterator = function (iter) {\n        var node = iter._node;\n        if (node === this._header) {\n            throwIteratorAccessError();\n        }\n        iter = iter.next();\n        this._eraseNode(node);\n        return iter;\n    };\n    LinkList.prototype.pushBack = function (element) {\n        this._insertNode(element, this._tail);\n        return this._length;\n    };\n    LinkList.prototype.popBack = function () {\n        if (this._length === 0)\n            return;\n        var value = this._tail._value;\n        this._eraseNode(this._tail);\n        return value;\n    };\n    /**\n     * @description Push an element to the front.\n     * @param element - The element you want to push.\n     * @returns The size of queue after pushing.\n     */\n    LinkList.prototype.pushFront = function (element) {\n        this._insertNode(element, this._header);\n        return this._length;\n    };\n    /**\n     * @description Removes the first element.\n     * @returns The element you popped.\n     */\n    LinkList.prototype.popFront = function () {\n        if (this._length === 0)\n            return;\n        var value = this._head._value;\n        this._eraseNode(this._head);\n        return value;\n    };\n    LinkList.prototype.setElementByPos = function (pos, element) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var curNode = this._head;\n        while (pos--) {\n            curNode = curNode._next;\n        }\n        curNode._value = element;\n    };\n    LinkList.prototype.insert = function (pos, element, num) {\n        if (num === void 0) { num = 1; }\n        if (pos < 0 || pos > this._length) {\n            throw new RangeError();\n        }\n        if (num <= 0)\n            return this._length;\n        if (pos === 0) {\n            while (num--)\n                this.pushFront(element);\n        }\n        else if (pos === this._length) {\n            while (num--)\n                this.pushBack(element);\n        }\n        else {\n            var curNode = this._head;\n            for (var i = 1; i < pos; ++i) {\n                curNode = curNode._next;\n            }\n            var next = curNode._next;\n            this._length += num;\n            while (num--) {\n                curNode._next = {\n                    _value: element,\n                    _pre: curNode\n                };\n                curNode._next._pre = curNode;\n                curNode = curNode._next;\n            }\n            curNode._next = next;\n            next._pre = curNode;\n        }\n        return this._length;\n    };\n    LinkList.prototype.find = function (element) {\n        var curNode = this._head;\n        while (curNode !== this._header) {\n            if (curNode._value === element) {\n                return new LinkListIterator(curNode, this._header, this);\n            }\n            curNode = curNode._next;\n        }\n        return this.end();\n    };\n    LinkList.prototype.reverse = function () {\n        if (this._length <= 1)\n            return;\n        var pHead = this._head;\n        var pTail = this._tail;\n        var cnt = 0;\n        while ((cnt << 1) < this._length) {\n            var tmp = pHead._value;\n            pHead._value = pTail._value;\n            pTail._value = tmp;\n            pHead = pHead._next;\n            pTail = pTail._pre;\n            cnt += 1;\n        }\n    };\n    LinkList.prototype.unique = function () {\n        if (this._length <= 1) {\n            return this._length;\n        }\n        var curNode = this._head;\n        while (curNode !== this._header) {\n            var tmpNode = curNode;\n            while (tmpNode._next !== this._header &&\n                tmpNode._value === tmpNode._next._value) {\n                tmpNode = tmpNode._next;\n                this._length -= 1;\n            }\n            curNode._next = tmpNode._next;\n            curNode._next._pre = curNode;\n            curNode = curNode._next;\n        }\n        return this._length;\n    };\n    LinkList.prototype.sort = function (cmp) {\n        if (this._length <= 1)\n            return;\n        var arr = [];\n        this.forEach(function (el) {\n            arr.push(el);\n        });\n        arr.sort(cmp);\n        var curNode = this._head;\n        arr.forEach(function (element) {\n            curNode._value = element;\n            curNode = curNode._next;\n        });\n    };\n    /**\n     * @description Merges two sorted lists.\n     * @param list - The other list you want to merge (must be sorted).\n     * @returns The size of list after merging.\n     * @example\n     * const linkA = new LinkList([1, 3, 5]);\n     * const linkB = new LinkList([2, 4, 6]);\n     * linkA.merge(linkB);  // [1, 2, 3, 4, 5];\n     */\n    LinkList.prototype.merge = function (list) {\n        var self = this;\n        if (this._length === 0) {\n            list.forEach(function (el) {\n                self.pushBack(el);\n            });\n        }\n        else {\n            var curNode_1 = this._head;\n            list.forEach(function (el) {\n                while (curNode_1 !== self._header &&\n                    curNode_1._value <= el) {\n                    curNode_1 = curNode_1._next;\n                }\n                self._insertNode(el, curNode_1._pre);\n            });\n        }\n        return this._length;\n    };\n    LinkList.prototype.forEach = function (callback) {\n        var curNode = this._head;\n        var index = 0;\n        while (curNode !== this._header) {\n            callback(curNode._value, index++, this);\n            curNode = curNode._next;\n        }\n    };\n    LinkList.prototype[Symbol.iterator] = function () {\n        return function () {\n            var curNode;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._length === 0)\n                            return [2 /*return*/];\n                        curNode = this._head;\n                        _a.label = 1;\n                    case 1:\n                        if (!(curNode !== this._header)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, curNode._value];\n                    case 2:\n                        _a.sent();\n                        curNode = curNode._next;\n                        return [3 /*break*/, 1];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }.bind(this)();\n    };\n    return LinkList;\n}(SequentialContainer));\nexport default LinkList;\n","import SequentialContainer from './Base';\nimport { ContainerIterator, initContainer, IteratorType } from '@/container/ContainerBase';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\ntype LinkNode<T> = {\n  _value: T;\n  _pre: LinkNode<T>;\n  _next: LinkNode<T>;\n}\n\nclass LinkListIterator<T> extends ContainerIterator<T> {\n  readonly container: LinkList<T>;\n  /**\n   * @internal\n   */\n  _node: LinkNode<T>;\n  /**\n   * @internal\n   */\n  private readonly _header: LinkNode<T>;\n  /**\n   * @internal\n   */\n  constructor(\n    _node: LinkNode<T>,\n    _header: LinkNode<T>,\n    container: LinkList<T>,\n    iteratorType?: IteratorType\n  ) {\n    super(iteratorType);\n    this._node = _node;\n    this._header = _header;\n    this.container = container;\n    if (this.iteratorType === IteratorType.NORMAL) {\n      this.pre = function () {\n        if (this._node._pre === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre;\n        return this;\n      };\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next;\n        return this;\n      };\n    } else {\n      this.pre = function () {\n        if (this._node._next === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next;\n        return this;\n      };\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre;\n        return this;\n      };\n    }\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    return this._node._value;\n  }\n  set pointer(newValue: T) {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    this._node._value = newValue;\n  }\n  copy() {\n    return new LinkListIterator<T>(this._node, this._header, this.container, this.iteratorType);\n  }\n  // @ts-ignore\n  equals(iter: LinkListIterator<T>): boolean;\n  // @ts-ignore\n  pre(): this;\n  // @ts-ignore\n  next(): this;\n}\n\nexport type { LinkListIterator };\n\nclass LinkList<T> extends SequentialContainer<T> {\n  /**\n   * @internal\n   */\n  private _head: LinkNode<T>;\n  /**\n   * @internal\n   */\n  private _tail: LinkNode<T>;\n  /**\n   * @internal\n   */\n  private readonly _header: LinkNode<T>;\n  constructor(container: initContainer<T> = []) {\n    super();\n    this._header = <LinkNode<T>>{};\n    this._head = this._tail = this._header._pre = this._header._next = this._header;\n    const self = this;\n    container.forEach(function (el) {\n      self.pushBack(el);\n    });\n  }\n  /**\n   * @internal\n   */\n  private _eraseNode(node: LinkNode<T>) {\n    const { _pre, _next } = node;\n    _pre._next = _next;\n    _next._pre = _pre;\n    if (node === this._head) {\n      this._head = _next;\n    }\n    if (node === this._tail) {\n      this._tail = _pre;\n    }\n    this._length -= 1;\n  }\n  /**\n   * @internal\n   */\n  private _insertNode(value: T, pre: LinkNode<T>) {\n    const next = pre._next;\n    const node = {\n      _value: value,\n      _pre: pre,\n      _next: next\n    };\n    pre._next = node;\n    next._pre = node;\n    if (pre === this._header) {\n      this._head = node;\n    }\n    if (next === this._header) {\n      this._tail = node;\n    }\n    this._length += 1;\n  }\n  clear() {\n    this._length = 0;\n    this._head = this._tail = this._header._pre = this._header._next = this._header;\n  }\n  begin() {\n    return new LinkListIterator<T>(this._head, this._header, this);\n  }\n  end() {\n    return new LinkListIterator<T>(this._header, this._header, this);\n  }\n  rBegin() {\n    return new LinkListIterator<T>(this._tail, this._header, this, IteratorType.REVERSE);\n  }\n  rEnd() {\n    return new LinkListIterator<T>(this._header, this._header, this, IteratorType.REVERSE);\n  }\n  front(): T | undefined {\n    return this._head._value;\n  }\n  back(): T | undefined {\n    return this._tail._value;\n  }\n  getElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let curNode = this._head;\n    while (pos--) {\n      curNode = curNode._next;\n    }\n    return curNode._value;\n  }\n  eraseElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let curNode = this._head;\n    while (pos--) {\n      curNode = curNode._next;\n    }\n    this._eraseNode(curNode);\n    return this._length;\n  }\n  eraseElementByValue(_value: T) {\n    let curNode = this._head;\n    while (curNode !== this._header) {\n      if (curNode._value === _value) {\n        this._eraseNode(curNode);\n      }\n      curNode = curNode._next;\n    }\n    return this._length;\n  }\n  eraseElementByIterator(iter: LinkListIterator<T>) {\n    const node = iter._node;\n    if (node === this._header) {\n      throwIteratorAccessError();\n    }\n    iter = iter.next();\n    this._eraseNode(node);\n    return iter;\n  }\n  pushBack(element: T) {\n    this._insertNode(element, this._tail);\n    return this._length;\n  }\n  popBack() {\n    if (this._length === 0) return;\n    const value = this._tail._value;\n    this._eraseNode(this._tail);\n    return value;\n  }\n  /**\n   * @description Push an element to the front.\n   * @param element - The element you want to push.\n   * @returns The size of queue after pushing.\n   */\n  pushFront(element: T) {\n    this._insertNode(element, this._header);\n    return this._length;\n  }\n  /**\n   * @description Removes the first element.\n   * @returns The element you popped.\n   */\n  popFront() {\n    if (this._length === 0) return;\n    const value = this._head._value;\n    this._eraseNode(this._head);\n    return value;\n  }\n  setElementByPos(pos: number, element: T) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let curNode = this._head;\n    while (pos--) {\n      curNode = curNode._next;\n    }\n    curNode._value = element;\n  }\n  insert(pos: number, element: T, num = 1) {\n    $checkWithinAccessParams!(pos, 0, this._length);\n    if (num <= 0) return this._length;\n    if (pos === 0) {\n      while (num--) this.pushFront(element);\n    } else if (pos === this._length) {\n      while (num--) this.pushBack(element);\n    } else {\n      let curNode = this._head;\n      for (let i = 1; i < pos; ++i) {\n        curNode = curNode._next;\n      }\n      const next = curNode._next;\n      this._length += num;\n      while (num--) {\n        curNode._next = <LinkNode<T>>{\n          _value: element,\n          _pre: curNode\n        };\n        curNode._next._pre = curNode;\n        curNode = curNode._next;\n      }\n      curNode._next = next;\n      next._pre = curNode;\n    }\n    return this._length;\n  }\n  find(element: T) {\n    let curNode = this._head;\n    while (curNode !== this._header) {\n      if (curNode._value === element) {\n        return new LinkListIterator<T>(curNode, this._header, this);\n      }\n      curNode = curNode._next;\n    }\n    return this.end();\n  }\n  reverse() {\n    if (this._length <= 1) return;\n    let pHead = this._head;\n    let pTail = this._tail;\n    let cnt = 0;\n    while ((cnt << 1) < this._length) {\n      const tmp = pHead._value;\n      pHead._value = pTail._value;\n      pTail._value = tmp;\n      pHead = pHead._next;\n      pTail = pTail._pre;\n      cnt += 1;\n    }\n  }\n  unique() {\n    if (this._length <= 1) {\n      return this._length;\n    }\n    let curNode = this._head;\n    while (curNode !== this._header) {\n      let tmpNode = curNode;\n      while (\n        tmpNode._next !== this._header &&\n        tmpNode._value === tmpNode._next._value\n      ) {\n        tmpNode = tmpNode._next;\n        this._length -= 1;\n      }\n      curNode._next = tmpNode._next;\n      curNode._next._pre = curNode;\n      curNode = curNode._next;\n    }\n    return this._length;\n  }\n  sort(cmp?: (x: T, y: T) => number) {\n    if (this._length <= 1) return;\n    const arr: T[] = [];\n    this.forEach(function (el) {\n      arr.push(el);\n    });\n    arr.sort(cmp);\n    let curNode: LinkNode<T> = this._head;\n    arr.forEach(function (element) {\n      curNode._value = element;\n      curNode = curNode._next;\n    });\n  }\n  /**\n   * @description Merges two sorted lists.\n   * @param list - The other list you want to merge (must be sorted).\n   * @returns The size of list after merging.\n   * @example\n   * const linkA = new LinkList([1, 3, 5]);\n   * const linkB = new LinkList([2, 4, 6]);\n   * linkA.merge(linkB);  // [1, 2, 3, 4, 5];\n   */\n  merge(list: LinkList<T>) {\n    const self = this;\n    if (this._length === 0) {\n      list.forEach(function (el) {\n        self.pushBack(el);\n      });\n    } else {\n      let curNode = this._head;\n      list.forEach(function (el) {\n        while (\n          curNode !== self._header &&\n          curNode._value <= el\n        ) {\n          curNode = curNode._next;\n        }\n        self._insertNode(el, curNode._pre);\n      });\n    }\n    return this._length;\n  }\n  forEach(callback: (element: T, index: number, list: LinkList<T>) => void) {\n    let curNode = this._head;\n    let index = 0;\n    while (curNode !== this._header) {\n      callback(curNode._value, index++, this);\n      curNode = curNode._next;\n    }\n  }\n  [Symbol.iterator]() {\n    return function * (this: LinkList<T>) {\n      if (this._length === 0) return;\n      let curNode = this._head;\n      while (curNode !== this._header) {\n        yield curNode._value;\n        curNode = curNode._next;\n      }\n    }.bind(this)();\n  }\n}\n\nexport default LinkList;\n"]},"metadata":{},"sourceType":"module"}