{"ast":null,"code":"'use strict';\n\n/**\r\n * Module dependencies\r\n */\nconst xtend = require('xtend');\nconst Readable = require('readable-stream').Readable;\nconst streamsOpts = {\n  objectMode: true\n};\nconst defaultStoreOptions = {\n  clean: true\n};\n\n/**\r\n * In-memory implementation of the message store\r\n * This can actually be saved into files.\r\n *\r\n * @param {Object} [options] - store options\r\n */\nfunction Store(options) {\n  if (!(this instanceof Store)) {\n    return new Store(options);\n  }\n  this.options = options || {};\n\n  // Defaults\n  this.options = xtend(defaultStoreOptions, options);\n  this._inflights = new Map();\n}\n\n/**\r\n * Adds a packet to the store, a packet is\r\n * anything that has a messageId property.\r\n *\r\n */\nStore.prototype.put = function (packet, cb) {\n  this._inflights.set(packet.messageId, packet);\n  if (cb) {\n    cb();\n  }\n  return this;\n};\n\n/**\r\n * Creates a stream with all the packets in the store\r\n *\r\n */\nStore.prototype.createStream = function () {\n  const stream = new Readable(streamsOpts);\n  const values = [];\n  let destroyed = false;\n  let i = 0;\n  this._inflights.forEach(function (value, key) {\n    values.push(value);\n  });\n  stream._read = function () {\n    if (!destroyed && i < values.length) {\n      this.push(values[i++]);\n    } else {\n      this.push(null);\n    }\n  };\n  stream.destroy = function () {\n    if (destroyed) {\n      return;\n    }\n    const self = this;\n    destroyed = true;\n    setTimeout(function () {\n      self.emit('close');\n    }, 0);\n  };\n  return stream;\n};\n\n/**\r\n * deletes a packet from the store.\r\n */\nStore.prototype.del = function (packet, cb) {\n  packet = this._inflights.get(packet.messageId);\n  if (packet) {\n    this._inflights.delete(packet.messageId);\n    cb(null, packet);\n  } else if (cb) {\n    cb(new Error('missing packet'));\n  }\n  return this;\n};\n\n/**\r\n * get a packet from the store.\r\n */\nStore.prototype.get = function (packet, cb) {\n  packet = this._inflights.get(packet.messageId);\n  if (packet) {\n    cb(null, packet);\n  } else if (cb) {\n    cb(new Error('missing packet'));\n  }\n  return this;\n};\n\n/**\r\n * Close the store\r\n */\nStore.prototype.close = function (cb) {\n  if (this.options.clean) {\n    this._inflights = null;\n  }\n  if (cb) {\n    cb();\n  }\n};\nmodule.exports = Store;","map":{"version":3,"names":["xtend","require","Readable","streamsOpts","objectMode","defaultStoreOptions","clean","Store","options","_inflights","Map","prototype","put","packet","cb","set","messageId","createStream","stream","values","destroyed","i","forEach","value","key","push","_read","length","destroy","self","setTimeout","emit","del","get","delete","Error","close","module","exports"],"sources":["C:/Documents/warehouse-dashboard/node_modules/mqtt/lib/store.js"],"sourcesContent":["'use strict'\r\n\r\n/**\r\n * Module dependencies\r\n */\r\nconst xtend = require('xtend')\r\n\r\nconst Readable = require('readable-stream').Readable\r\nconst streamsOpts = { objectMode: true }\r\nconst defaultStoreOptions = {\r\n  clean: true\r\n}\r\n\r\n/**\r\n * In-memory implementation of the message store\r\n * This can actually be saved into files.\r\n *\r\n * @param {Object} [options] - store options\r\n */\r\nfunction Store (options) {\r\n  if (!(this instanceof Store)) {\r\n    return new Store(options)\r\n  }\r\n\r\n  this.options = options || {}\r\n\r\n  // Defaults\r\n  this.options = xtend(defaultStoreOptions, options)\r\n\r\n  this._inflights = new Map()\r\n}\r\n\r\n/**\r\n * Adds a packet to the store, a packet is\r\n * anything that has a messageId property.\r\n *\r\n */\r\nStore.prototype.put = function (packet, cb) {\r\n  this._inflights.set(packet.messageId, packet)\r\n\r\n  if (cb) {\r\n    cb()\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n/**\r\n * Creates a stream with all the packets in the store\r\n *\r\n */\r\nStore.prototype.createStream = function () {\r\n  const stream = new Readable(streamsOpts)\r\n  const values = []\r\n  let destroyed = false\r\n  let i = 0\r\n\r\n  this._inflights.forEach(function (value, key) {\r\n    values.push(value)\r\n  })\r\n\r\n  stream._read = function () {\r\n    if (!destroyed && i < values.length) {\r\n      this.push(values[i++])\r\n    } else {\r\n      this.push(null)\r\n    }\r\n  }\r\n\r\n  stream.destroy = function () {\r\n    if (destroyed) {\r\n      return\r\n    }\r\n\r\n    const self = this\r\n\r\n    destroyed = true\r\n\r\n    setTimeout(function () {\r\n      self.emit('close')\r\n    }, 0)\r\n  }\r\n\r\n  return stream\r\n}\r\n\r\n/**\r\n * deletes a packet from the store.\r\n */\r\nStore.prototype.del = function (packet, cb) {\r\n  packet = this._inflights.get(packet.messageId)\r\n  if (packet) {\r\n    this._inflights.delete(packet.messageId)\r\n    cb(null, packet)\r\n  } else if (cb) {\r\n    cb(new Error('missing packet'))\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n/**\r\n * get a packet from the store.\r\n */\r\nStore.prototype.get = function (packet, cb) {\r\n  packet = this._inflights.get(packet.messageId)\r\n  if (packet) {\r\n    cb(null, packet)\r\n  } else if (cb) {\r\n    cb(new Error('missing packet'))\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n/**\r\n * Close the store\r\n */\r\nStore.prototype.close = function (cb) {\r\n  if (this.options.clean) {\r\n    this._inflights = null\r\n  }\r\n  if (cb) {\r\n    cb()\r\n  }\r\n}\r\n\r\nmodule.exports = Store\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}