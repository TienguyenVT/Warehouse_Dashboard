{"ast":null,"code":"var __extends = this && this.t || function () {\n  var extendStatics = function (e, t) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (e, t) {\n      e.__proto__ = t;\n    } || function (e, t) {\n      for (var r in t) if (Object.prototype.hasOwnProperty.call(t, r)) e[r] = t[r];\n    };\n    return extendStatics(e, t);\n  };\n  return function (e, t) {\n    if (typeof t !== \"function\" && t !== null) throw new TypeError(\"Class extends value \" + String(t) + \" is not a constructor or null\");\n    extendStatics(e, t);\n    function __() {\n      this.constructor = e;\n    }\n    e.prototype = t === null ? Object.create(t) : (__.prototype = t.prototype, new __());\n  };\n}();\nvar __generator = this && this.i || function (e, t) {\n  var r = {\n      label: 0,\n      sent: function () {\n        if (o[0] & 1) throw o[1];\n        return o[1];\n      },\n      trys: [],\n      ops: []\n    },\n    n,\n    i,\n    o,\n    u;\n  return u = {\n    next: verb(0),\n    throw: verb(1),\n    return: verb(2)\n  }, typeof Symbol === \"function\" && (u[Symbol.iterator] = function () {\n    return this;\n  }), u;\n  function verb(e) {\n    return function (t) {\n      return step([e, t]);\n    };\n  }\n  function step(u) {\n    if (n) throw new TypeError(\"Generator is already executing.\");\n    while (r) try {\n      if (n = 1, i && (o = u[0] & 2 ? i[\"return\"] : u[0] ? i[\"throw\"] || ((o = i[\"return\"]) && o.call(i), 0) : i.next) && !(o = o.call(i, u[1])).done) return o;\n      if (i = 0, o) u = [u[0] & 2, o.value];\n      switch (u[0]) {\n        case 0:\n        case 1:\n          o = u;\n          break;\n        case 4:\n          r.label++;\n          return {\n            value: u[1],\n            done: false\n          };\n        case 5:\n          r.label++;\n          i = u[1];\n          u = [0];\n          continue;\n        case 7:\n          u = r.ops.pop();\n          r.trys.pop();\n          continue;\n        default:\n          if (!(o = r.trys, o = o.length > 0 && o[o.length - 1]) && (u[0] === 6 || u[0] === 2)) {\n            r = 0;\n            continue;\n          }\n          if (u[0] === 3 && (!o || u[1] > o[0] && u[1] < o[3])) {\n            r.label = u[1];\n            break;\n          }\n          if (u[0] === 6 && r.label < o[1]) {\n            r.label = o[1];\n            o = u;\n            break;\n          }\n          if (o && r.label < o[2]) {\n            r.label = o[2];\n            r.ops.push(u);\n            break;\n          }\n          if (o[2]) r.ops.pop();\n          r.trys.pop();\n          continue;\n      }\n      u = t.call(e, r);\n    } catch (e) {\n      u = [6, e];\n      i = 0;\n    } finally {\n      n = o = 0;\n    }\n    if (u[0] & 5) throw u[1];\n    return {\n      value: u[0] ? u[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __values = this && this.V || function (e) {\n  var t = typeof Symbol === \"function\" && Symbol.iterator,\n    r = t && e[t],\n    n = 0;\n  if (r) return r.call(e);\n  if (e && typeof e.length === \"number\") return {\n    next: function () {\n      if (e && n >= e.length) e = void 0;\n      return {\n        value: e && e[n++],\n        done: !e\n      };\n    }\n  };\n  throw new TypeError(t ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport TreeContainer from \"./Base\";\nimport TreeIterator from \"./Base/TreeIterator\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nvar OrderedSetIterator = function (e) {\n  __extends(OrderedSetIterator, e);\n  function OrderedSetIterator(t, r, n, i) {\n    var o = e.call(this, t, r, i) || this;\n    o.container = n;\n    return o;\n  }\n  Object.defineProperty(OrderedSetIterator.prototype, \"pointer\", {\n    get: function () {\n      if (this.o === this.h) {\n        throwIteratorAccessError();\n      }\n      return this.o.u;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  OrderedSetIterator.prototype.copy = function () {\n    return new OrderedSetIterator(this.o, this.h, this.container, this.iteratorType);\n  };\n  return OrderedSetIterator;\n}(TreeIterator);\nvar OrderedSet = function (e) {\n  __extends(OrderedSet, e);\n  function OrderedSet(t, r, n) {\n    if (t === void 0) {\n      t = [];\n    }\n    var i = e.call(this, r, n) || this;\n    var o = i;\n    t.forEach(function (e) {\n      o.insert(e);\n    });\n    return i;\n  }\n  OrderedSet.prototype.P = function (e) {\n    return __generator(this, function (t) {\n      switch (t.label) {\n        case 0:\n          if (e === undefined) return [2];\n          return [5, __values(this.P(e.K))];\n        case 1:\n          t.sent();\n          return [4, e.u];\n        case 2:\n          t.sent();\n          return [5, __values(this.P(e.N))];\n        case 3:\n          t.sent();\n          return [2];\n      }\n    });\n  };\n  OrderedSet.prototype.begin = function () {\n    return new OrderedSetIterator(this.h.K || this.h, this.h, this);\n  };\n  OrderedSet.prototype.end = function () {\n    return new OrderedSetIterator(this.h, this.h, this);\n  };\n  OrderedSet.prototype.rBegin = function () {\n    return new OrderedSetIterator(this.h.N || this.h, this.h, this, 1);\n  };\n  OrderedSet.prototype.rEnd = function () {\n    return new OrderedSetIterator(this.h, this.h, this, 1);\n  };\n  OrderedSet.prototype.front = function () {\n    return this.h.K ? this.h.K.u : undefined;\n  };\n  OrderedSet.prototype.back = function () {\n    return this.h.N ? this.h.N.u : undefined;\n  };\n  OrderedSet.prototype.insert = function (e, t) {\n    return this.v(e, undefined, t);\n  };\n  OrderedSet.prototype.find = function (e) {\n    var t = this.g(this.W, e);\n    return new OrderedSetIterator(t, this.h, this);\n  };\n  OrderedSet.prototype.lowerBound = function (e) {\n    var t = this.U(this.W, e);\n    return new OrderedSetIterator(t, this.h, this);\n  };\n  OrderedSet.prototype.upperBound = function (e) {\n    var t = this.X(this.W, e);\n    return new OrderedSetIterator(t, this.h, this);\n  };\n  OrderedSet.prototype.reverseLowerBound = function (e) {\n    var t = this.Y(this.W, e);\n    return new OrderedSetIterator(t, this.h, this);\n  };\n  OrderedSet.prototype.reverseUpperBound = function (e) {\n    var t = this.Z(this.W, e);\n    return new OrderedSetIterator(t, this.h, this);\n  };\n  OrderedSet.prototype.union = function (e) {\n    var t = this;\n    e.forEach(function (e) {\n      t.insert(e);\n    });\n    return this.M;\n  };\n  OrderedSet.prototype[Symbol.iterator] = function () {\n    return this.P(this.W);\n  };\n  return OrderedSet;\n}(TreeContainer);\nexport default OrderedSet;","map":{"version":3,"sources":["container/TreeContainer/OrderedSet.js","../../src/container/TreeContainer/OrderedSet.ts"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","throw","return","Symbol","iterator","n","v","step","op","done","value","pop","length","push","e","__values","o","s","m","i","_this","get","enumerable","configurable","_a","TreeContainer","TreeIterator","throwIteratorAccessError","node","header","container","iteratorType","_super","OrderedSetIterator","_node","_header","_key","cmp","enableIndex","self","forEach","el","insert","OrderedSet","curNode","undefined","_iterationFunc","_left","_right","key","hint","_set","element","resNode","_findElementNode","_root","_lowerBound","_upperBound","_reverseLowerBound","_reverseUpperBound","other","_length"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport TreeContainer from './Base';\nimport TreeIterator from './Base/TreeIterator';\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nvar OrderedSetIterator = /** @class */ (function (_super) {\n    __extends(OrderedSetIterator, _super);\n    function OrderedSetIterator(node, header, container, iteratorType) {\n        var _this = _super.call(this, node, header, iteratorType) || this;\n        _this.container = container;\n        return _this;\n    }\n    Object.defineProperty(OrderedSetIterator.prototype, \"pointer\", {\n        get: function () {\n            if (this._node === this._header) {\n                throwIteratorAccessError();\n            }\n            return this._node._key;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    OrderedSetIterator.prototype.copy = function () {\n        return new OrderedSetIterator(this._node, this._header, this.container, this.iteratorType);\n    };\n    return OrderedSetIterator;\n}(TreeIterator));\nvar OrderedSet = /** @class */ (function (_super) {\n    __extends(OrderedSet, _super);\n    /**\n     * @param container - The initialization container.\n     * @param cmp - The compare function.\n     * @param enableIndex - Whether to enable iterator indexing function.\n     * @example\n     * new OrderedSet();\n     * new OrderedSet([0, 1, 2]);\n     * new OrderedSet([0, 1, 2], (x, y) => x - y);\n     * new OrderedSet([0, 1, 2], (x, y) => x - y, true);\n     */\n    function OrderedSet(container, cmp, enableIndex) {\n        if (container === void 0) { container = []; }\n        var _this = _super.call(this, cmp, enableIndex) || this;\n        var self = _this;\n        container.forEach(function (el) {\n            self.insert(el);\n        });\n        return _this;\n    }\n    /**\n     * @internal\n     */\n    OrderedSet.prototype._iterationFunc = function (curNode) {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (curNode === undefined)\n                        return [2 /*return*/];\n                    return [5 /*yield**/, __values(this._iterationFunc(curNode._left))];\n                case 1:\n                    _a.sent();\n                    return [4 /*yield*/, curNode._key];\n                case 2:\n                    _a.sent();\n                    return [5 /*yield**/, __values(this._iterationFunc(curNode._right))];\n                case 3:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    };\n    OrderedSet.prototype.begin = function () {\n        return new OrderedSetIterator(this._header._left || this._header, this._header, this);\n    };\n    OrderedSet.prototype.end = function () {\n        return new OrderedSetIterator(this._header, this._header, this);\n    };\n    OrderedSet.prototype.rBegin = function () {\n        return new OrderedSetIterator(this._header._right || this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    OrderedSet.prototype.rEnd = function () {\n        return new OrderedSetIterator(this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    OrderedSet.prototype.front = function () {\n        return this._header._left ? this._header._left._key : undefined;\n    };\n    OrderedSet.prototype.back = function () {\n        return this._header._right ? this._header._right._key : undefined;\n    };\n    /**\n     * @description Insert element to set.\n     * @param key - The key want to insert.\n     * @param hint - You can give an iterator hint to improve insertion efficiency.\n     * @return The size of container after setting.\n     * @example\n     * const st = new OrderedSet([2, 4, 5]);\n     * const iter = st.begin();\n     * st.insert(1);\n     * st.insert(3, iter);  // give a hint will be faster.\n     */\n    OrderedSet.prototype.insert = function (key, hint) {\n        return this._set(key, undefined, hint);\n    };\n    OrderedSet.prototype.find = function (element) {\n        var resNode = this._findElementNode(this._root, element);\n        return new OrderedSetIterator(resNode, this._header, this);\n    };\n    OrderedSet.prototype.lowerBound = function (key) {\n        var resNode = this._lowerBound(this._root, key);\n        return new OrderedSetIterator(resNode, this._header, this);\n    };\n    OrderedSet.prototype.upperBound = function (key) {\n        var resNode = this._upperBound(this._root, key);\n        return new OrderedSetIterator(resNode, this._header, this);\n    };\n    OrderedSet.prototype.reverseLowerBound = function (key) {\n        var resNode = this._reverseLowerBound(this._root, key);\n        return new OrderedSetIterator(resNode, this._header, this);\n    };\n    OrderedSet.prototype.reverseUpperBound = function (key) {\n        var resNode = this._reverseUpperBound(this._root, key);\n        return new OrderedSetIterator(resNode, this._header, this);\n    };\n    OrderedSet.prototype.union = function (other) {\n        var self = this;\n        other.forEach(function (el) {\n            self.insert(el);\n        });\n        return this._length;\n    };\n    OrderedSet.prototype[Symbol.iterator] = function () {\n        return this._iterationFunc(this._root);\n    };\n    return OrderedSet;\n}(TreeContainer));\nexport default OrderedSet;\n","import TreeContainer from './Base';\nimport TreeIterator from './Base/TreeIterator';\nimport { TreeNode } from './Base/TreeNode';\nimport { initContainer, IteratorType } from '@/container/ContainerBase';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nclass OrderedSetIterator<K> extends TreeIterator<K, undefined> {\n  container: OrderedSet<K>;\n  constructor(\n    node: TreeNode<K, undefined>,\n    header: TreeNode<K, undefined>,\n    container: OrderedSet<K>,\n    iteratorType?: IteratorType\n  ) {\n    super(node, header, iteratorType);\n    this.container = container;\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    return this._node._key!;\n  }\n  copy() {\n    return new OrderedSetIterator<K>(\n      this._node,\n      this._header,\n      this.container,\n      this.iteratorType\n    );\n  }\n  // @ts-ignore\n  equals(iter: OrderedSetIterator<K>): boolean;\n}\n\nexport type { OrderedSetIterator };\n\nclass OrderedSet<K> extends TreeContainer<K, undefined> {\n  /**\n   * @param container - The initialization container.\n   * @param cmp - The compare function.\n   * @param enableIndex - Whether to enable iterator indexing function.\n   * @example\n   * new OrderedSet();\n   * new OrderedSet([0, 1, 2]);\n   * new OrderedSet([0, 1, 2], (x, y) => x - y);\n   * new OrderedSet([0, 1, 2], (x, y) => x - y, true);\n   */\n  constructor(\n    container: initContainer<K> = [],\n    cmp?: (x: K, y: K) => number,\n    enableIndex?: boolean\n  ) {\n    super(cmp, enableIndex);\n    const self = this;\n    container.forEach(function (el) {\n      self.insert(el);\n    });\n  }\n  /**\n   * @internal\n   */\n  private * _iterationFunc(\n    curNode: TreeNode<K, undefined> | undefined\n  ): Generator<K, void> {\n    if (curNode === undefined) return;\n    yield * this._iterationFunc(curNode._left);\n    yield curNode._key!;\n    yield * this._iterationFunc(curNode._right);\n  }\n  begin() {\n    return new OrderedSetIterator<K>(\n      this._header._left || this._header,\n      this._header,\n      this\n    );\n  }\n  end() {\n    return new OrderedSetIterator<K>(this._header, this._header, this);\n  }\n  rBegin() {\n    return new OrderedSetIterator<K>(\n      this._header._right || this._header,\n      this._header,\n      this,\n      IteratorType.REVERSE\n    );\n  }\n  rEnd() {\n    return new OrderedSetIterator<K>(this._header, this._header, this, IteratorType.REVERSE);\n  }\n  front() {\n    return this._header._left ? this._header._left._key : undefined;\n  }\n  back() {\n    return this._header._right ? this._header._right._key : undefined;\n  }\n  /**\n   * @description Insert element to set.\n   * @param key - The key want to insert.\n   * @param hint - You can give an iterator hint to improve insertion efficiency.\n   * @return The size of container after setting.\n   * @example\n   * const st = new OrderedSet([2, 4, 5]);\n   * const iter = st.begin();\n   * st.insert(1);\n   * st.insert(3, iter);  // give a hint will be faster.\n   */\n  insert(key: K, hint?: OrderedSetIterator<K>) {\n    return this._set(key, undefined, hint);\n  }\n  find(element: K) {\n    const resNode = this._findElementNode(this._root, element);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  lowerBound(key: K) {\n    const resNode = this._lowerBound(this._root, key);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  upperBound(key: K) {\n    const resNode = this._upperBound(this._root, key);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  reverseLowerBound(key: K) {\n    const resNode = this._reverseLowerBound(this._root, key);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  reverseUpperBound(key: K) {\n    const resNode = this._reverseUpperBound(this._root, key);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  union(other: OrderedSet<K>) {\n    const self = this;\n    other.forEach(function (el) {\n      self.insert(el);\n    });\n    return this._length;\n  }\n  [Symbol.iterator]() {\n    return this._iterationFunc(this._root);\n  }\n  // @ts-ignore\n  eraseElementByIterator(iter: OrderedSetIterator<K>): OrderedSetIterator<K>;\n  // @ts-ignore\n  forEach(callback: (element: K, index: number, tree: OrderedSet<K>) => void): void;\n  // @ts-ignore\n  getElementByPos(pos: number): K;\n}\n\nexport default OrderedSet;\n"]},"metadata":{},"sourceType":"module"}