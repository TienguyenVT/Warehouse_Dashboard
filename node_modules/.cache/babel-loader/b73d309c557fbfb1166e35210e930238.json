{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents\\\\warehouse-dashboard\\\\src\\\\components\\\\ShelfGrid\\\\ShelfItem.js\",\n  _s = $RefreshSig$();\n/**\r\n * File: ShelfItem.js\r\n * Mô tả: Component hiển thị một kệ hàng đơn lẻ trong lưới kệ của dashboard quản lý kho.\r\n * Chức năng: \r\n * - Hiển thị trạng thái, vị trí kệ thông qua màu sắc và văn bản\r\n * - Xử lý sự kiện click để xem chi tiết kệ\r\n * - Hỗ trợ tương tác bàn phím và accessibility (ARIA)\r\n * - Hiển thị hiệu ứng trực quan khi được lọc \r\n * - Cung cấp tooltip hiển thị thông tin nhanh\r\n * - Lưu trữ thông tin về trạng thái và vị trí thông qua data attributes\r\n */\nimport React, { useMemo } from 'react';\nimport './ShelfGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShelfItem = ({\n  tier,\n  tray,\n  status,\n  onClick,\n  isFiltered = false\n}) => {\n  _s();\n  // Đảm bảo status luôn là chuỗi hợp lệ và chữ thường\n  const safeStatus = useMemo(() => (status || 'empty').toLowerCase(), [status]);\n\n  // Tooltip chi tiết hơn\n  const statusLabels = useMemo(() => ({\n    high: 'Kệ chứa nhiều',\n    medium: 'Kệ chứa vừa phải',\n    empty: 'Kệ trống'\n  }), []);\n\n  // Tạo text hiển thị mô tả\n  const statusDescription = useMemo(() => statusLabels[safeStatus] || safeStatus, [safeStatus, statusLabels]);\n\n  // Tạo title cho tooltip\n  const itemTitle = useMemo(() => `Tầng ${tier} - Khay ${tray} | ${statusDescription}`, [tier, tray, statusDescription]);\n\n  // Thêm hàm xử lý sự kiện riêng để đảm bảo click hoạt động\n  const handleClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (onClick) onClick();\n  };\n\n  // Thêm hàm xử lý phím để đảm bảo accessibility\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      if (onClick) onClick();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `shelf-item ${safeStatus} ${isFiltered ? 'filtered' : ''}`,\n    onClick: handleClick,\n    onKeyPress: handleKeyPress,\n    title: itemTitle,\n    tabIndex: 0,\n    role: \"button\",\n    \"aria-label\": `Kệ tầng ${tier} khay ${tray} trạng thái ${statusDescription}`,\n    style: {\n      cursor: onClick ? 'pointer' : 'default',\n      transform: isFiltered ? 'translateY(-6px)' : 'translateY(0)'\n    },\n    \"data-tier\": tier,\n    \"data-tray\": tray,\n    \"data-status\": status,\n    \"data-filtered\": isFiltered,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"shelf-label\",\n      children: [tier, \"-\", tray]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), isFiltered && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"highlight-border\",\n      \"aria-hidden\": \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ShelfItem, \"RaJeMbPzUYFUsakzXP8IWJkTEz0=\");\n_c = ShelfItem;\nexport default ShelfItem;\nvar _c;\n$RefreshReg$(_c, \"ShelfItem\");","map":{"version":3,"names":["React","useMemo","jsxDEV","_jsxDEV","ShelfItem","tier","tray","status","onClick","isFiltered","_s","safeStatus","toLowerCase","statusLabels","high","medium","empty","statusDescription","itemTitle","handleClick","e","preventDefault","stopPropagation","handleKeyPress","key","className","onKeyPress","title","tabIndex","role","style","cursor","transform","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Documents/warehouse-dashboard/src/components/ShelfGrid/ShelfItem.js"],"sourcesContent":["/**\r\n * File: ShelfItem.js\r\n * Mô tả: Component hiển thị một kệ hàng đơn lẻ trong lưới kệ của dashboard quản lý kho.\r\n * Chức năng: \r\n * - Hiển thị trạng thái, vị trí kệ thông qua màu sắc và văn bản\r\n * - Xử lý sự kiện click để xem chi tiết kệ\r\n * - Hỗ trợ tương tác bàn phím và accessibility (ARIA)\r\n * - Hiển thị hiệu ứng trực quan khi được lọc \r\n * - Cung cấp tooltip hiển thị thông tin nhanh\r\n * - Lưu trữ thông tin về trạng thái và vị trí thông qua data attributes\r\n */\r\nimport React, { useMemo } from 'react';\r\nimport './ShelfGrid.css';\r\n\r\nconst ShelfItem = ({ tier, tray, status, onClick, isFiltered = false }) => {\r\n  // Đảm bảo status luôn là chuỗi hợp lệ và chữ thường\r\n  const safeStatus = useMemo(() => \r\n    (status || 'empty').toLowerCase(), \r\n    [status]\r\n  );\r\n\r\n  // Tooltip chi tiết hơn\r\n  const statusLabels = useMemo(() => ({\r\n    high: 'Kệ chứa nhiều',\r\n    medium: 'Kệ chứa vừa phải',\r\n    empty: 'Kệ trống'\r\n  }), []);\r\n\r\n  // Tạo text hiển thị mô tả\r\n  const statusDescription = useMemo(() => \r\n    statusLabels[safeStatus] || safeStatus,\r\n    [safeStatus, statusLabels]\r\n  );\r\n\r\n  // Tạo title cho tooltip\r\n  const itemTitle = useMemo(() => \r\n    `Tầng ${tier} - Khay ${tray} | ${statusDescription}`,\r\n    [tier, tray, statusDescription]\r\n  );\r\n\r\n  // Thêm hàm xử lý sự kiện riêng để đảm bảo click hoạt động\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (onClick) onClick();\r\n  };\r\n\r\n  // Thêm hàm xử lý phím để đảm bảo accessibility\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' || e.key === ' ') {\r\n      e.preventDefault();\r\n      if (onClick) onClick();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`shelf-item ${safeStatus} ${isFiltered ? 'filtered' : ''}`}\r\n      onClick={handleClick}\r\n      onKeyPress={handleKeyPress}\r\n      title={itemTitle}\r\n      tabIndex={0}\r\n      role=\"button\"\r\n      aria-label={`Kệ tầng ${tier} khay ${tray} trạng thái ${statusDescription}`}\r\n      style={{ \r\n        cursor: onClick ? 'pointer' : 'default',\r\n        transform: isFiltered ? 'translateY(-6px)' : 'translateY(0)'\r\n      }}\r\n      data-tier={tier}\r\n      data-tray={tray}\r\n      data-status={status}\r\n      data-filtered={isFiltered}\r\n    >\r\n      <span className=\"shelf-label\">{tier}-{tray}</span>\r\n      {isFiltered && <div className=\"highlight-border\" aria-hidden=\"true\"></div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShelfItem;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC,MAAM;EAAEC,OAAO;EAAEC,UAAU,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACzE;EACA,MAAMC,UAAU,GAAGV,OAAO,CAAC,MACzB,CAACM,MAAM,IAAI,OAAO,EAAEK,WAAW,CAAC,CAAC,EACjC,CAACL,MAAM,CACT,CAAC;;EAED;EACA,MAAMM,YAAY,GAAGZ,OAAO,CAAC,OAAO;IAClCa,IAAI,EAAE,eAAe;IACrBC,MAAM,EAAE,kBAAkB;IAC1BC,KAAK,EAAE;EACT,CAAC,CAAC,EAAE,EAAE,CAAC;;EAEP;EACA,MAAMC,iBAAiB,GAAGhB,OAAO,CAAC,MAChCY,YAAY,CAACF,UAAU,CAAC,IAAIA,UAAU,EACtC,CAACA,UAAU,EAAEE,YAAY,CAC3B,CAAC;;EAED;EACA,MAAMK,SAAS,GAAGjB,OAAO,CAAC,MACxB,QAAQI,IAAI,WAAWC,IAAI,MAAMW,iBAAiB,EAAE,EACpD,CAACZ,IAAI,EAAEC,IAAI,EAAEW,iBAAiB,CAChC,CAAC;;EAED;EACA,MAAME,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBD,CAAC,CAACE,eAAe,CAAC,CAAC;IACnB,IAAId,OAAO,EAAEA,OAAO,CAAC,CAAC;EACxB,CAAC;;EAED;EACA,MAAMe,cAAc,GAAIH,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACI,GAAG,KAAK,OAAO,IAAIJ,CAAC,CAACI,GAAG,KAAK,GAAG,EAAE;MACtCJ,CAAC,CAACC,cAAc,CAAC,CAAC;MAClB,IAAIb,OAAO,EAAEA,OAAO,CAAC,CAAC;IACxB;EACF,CAAC;EAED,oBACEL,OAAA;IACEsB,SAAS,EAAE,cAAcd,UAAU,IAAIF,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;IACtED,OAAO,EAAEW,WAAY;IACrBO,UAAU,EAAEH,cAAe;IAC3BI,KAAK,EAAET,SAAU;IACjBU,QAAQ,EAAE,CAAE;IACZC,IAAI,EAAC,QAAQ;IACb,cAAY,WAAWxB,IAAI,SAASC,IAAI,eAAeW,iBAAiB,EAAG;IAC3Ea,KAAK,EAAE;MACLC,MAAM,EAAEvB,OAAO,GAAG,SAAS,GAAG,SAAS;MACvCwB,SAAS,EAAEvB,UAAU,GAAG,kBAAkB,GAAG;IAC/C,CAAE;IACF,aAAWJ,IAAK;IAChB,aAAWC,IAAK;IAChB,eAAaC,MAAO;IACpB,iBAAeE,UAAW;IAAAwB,QAAA,gBAE1B9B,OAAA;MAAMsB,SAAS,EAAC,aAAa;MAAAQ,QAAA,GAAE5B,IAAI,EAAC,GAAC,EAACC,IAAI;IAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EACjD5B,UAAU,iBAAIN,OAAA;MAAKsB,SAAS,EAAC,kBAAkB;MAAC,eAAY;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA/DIN,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAiEf,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}