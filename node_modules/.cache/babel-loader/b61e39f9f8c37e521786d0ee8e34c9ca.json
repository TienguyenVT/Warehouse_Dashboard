{"ast":null,"code":"var __extends = this && this.t || function () {\n  var extendStatics = function (t, i) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (t, i) {\n      t.__proto__ = i;\n    } || function (t, i) {\n      for (var r in i) if (Object.prototype.hasOwnProperty.call(i, r)) t[r] = i[r];\n    };\n    return extendStatics(t, i);\n  };\n  return function (t, i) {\n    if (typeof i !== \"function\" && i !== null) throw new TypeError(\"Class extends value \" + String(i) + \" is not a constructor or null\");\n    extendStatics(t, i);\n    function __() {\n      this.constructor = t;\n    }\n    t.prototype = i === null ? Object.create(i) : (__.prototype = i.prototype, new __());\n  };\n}();\nvar __generator = this && this.i || function (t, i) {\n  var r = {\n      label: 0,\n      sent: function () {\n        if (h[0] & 1) throw h[1];\n        return h[1];\n      },\n      trys: [],\n      ops: []\n    },\n    e,\n    s,\n    h,\n    n;\n  return n = {\n    next: verb(0),\n    throw: verb(1),\n    return: verb(2)\n  }, typeof Symbol === \"function\" && (n[Symbol.iterator] = function () {\n    return this;\n  }), n;\n  function verb(t) {\n    return function (i) {\n      return step([t, i]);\n    };\n  }\n  function step(n) {\n    if (e) throw new TypeError(\"Generator is already executing.\");\n    while (r) try {\n      if (e = 1, s && (h = n[0] & 2 ? s[\"return\"] : n[0] ? s[\"throw\"] || ((h = s[\"return\"]) && h.call(s), 0) : s.next) && !(h = h.call(s, n[1])).done) return h;\n      if (s = 0, h) n = [n[0] & 2, h.value];\n      switch (n[0]) {\n        case 0:\n        case 1:\n          h = n;\n          break;\n        case 4:\n          r.label++;\n          return {\n            value: n[1],\n            done: false\n          };\n        case 5:\n          r.label++;\n          s = n[1];\n          n = [0];\n          continue;\n        case 7:\n          n = r.ops.pop();\n          r.trys.pop();\n          continue;\n        default:\n          if (!(h = r.trys, h = h.length > 0 && h[h.length - 1]) && (n[0] === 6 || n[0] === 2)) {\n            r = 0;\n            continue;\n          }\n          if (n[0] === 3 && (!h || n[1] > h[0] && n[1] < h[3])) {\n            r.label = n[1];\n            break;\n          }\n          if (n[0] === 6 && r.label < h[1]) {\n            r.label = h[1];\n            h = n;\n            break;\n          }\n          if (h && r.label < h[2]) {\n            r.label = h[2];\n            r.ops.push(n);\n            break;\n          }\n          if (h[2]) r.ops.pop();\n          r.trys.pop();\n          continue;\n      }\n      n = i.call(t, r);\n    } catch (t) {\n      n = [6, t];\n      s = 0;\n    } finally {\n      e = h = 0;\n    }\n    if (n[0] & 5) throw n[1];\n    return {\n      value: n[0] ? n[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.q || function (t, i) {\n  var r = typeof Symbol === \"function\" && t[Symbol.iterator];\n  if (!r) return t;\n  var e = r.call(t),\n    s,\n    h = [],\n    n;\n  try {\n    while ((i === void 0 || i-- > 0) && !(s = e.next()).done) h.push(s.value);\n  } catch (t) {\n    n = {\n      error: t\n    };\n  } finally {\n    try {\n      if (s && !s.done && (r = e[\"return\"])) r.call(e);\n    } finally {\n      if (n) throw n.error;\n    }\n  }\n  return h;\n};\nvar __spreadArray = this && this.D || function (t, i, r) {\n  if (r || arguments.length === 2) for (var e = 0, s = i.length, h; e < s; e++) {\n    if (h || !(e in i)) {\n      if (!h) h = Array.prototype.slice.call(i, 0, e);\n      h[e] = i[e];\n    }\n  }\n  return t.concat(h || Array.prototype.slice.call(i));\n};\nimport SequentialContainer from \"./Base\";\nimport { RandomIterator } from \"./Base/RandomIterator\";\nvar DequeIterator = function (t) {\n  __extends(DequeIterator, t);\n  function DequeIterator(i, r, e) {\n    var s = t.call(this, i, e) || this;\n    s.container = r;\n    return s;\n  }\n  DequeIterator.prototype.copy = function () {\n    return new DequeIterator(this.o, this.container, this.iteratorType);\n  };\n  return DequeIterator;\n}(RandomIterator);\nvar Deque = function (t) {\n  __extends(Deque, t);\n  function Deque(i, r) {\n    if (i === void 0) {\n      i = [];\n    }\n    if (r === void 0) {\n      r = 1 << 12;\n    }\n    var e = t.call(this) || this;\n    e.A = 0;\n    e.S = 0;\n    e.R = 0;\n    e.k = 0;\n    e.C = 0;\n    e.j = [];\n    var s = function () {\n      if (typeof i.length === \"number\") return i.length;\n      if (typeof i.size === \"number\") return i.size;\n      if (typeof i.size === \"function\") return i.size();\n      throw new TypeError(\"Cannot get the length or size of the container\");\n    }();\n    e.B = r;\n    e.C = Math.max(Math.ceil(s / e.B), 1);\n    for (var h = 0; h < e.C; ++h) {\n      e.j.push(new Array(e.B));\n    }\n    var n = Math.ceil(s / e.B);\n    e.A = e.R = (e.C >> 1) - (n >> 1);\n    e.S = e.k = e.B - s % e.B >> 1;\n    var u = e;\n    i.forEach(function (t) {\n      u.pushBack(t);\n    });\n    return e;\n  }\n  Deque.prototype.O = function () {\n    var t = [];\n    var i = Math.max(this.C >> 1, 1);\n    for (var r = 0; r < i; ++r) {\n      t[r] = new Array(this.B);\n    }\n    for (var r = this.A; r < this.C; ++r) {\n      t[t.length] = this.j[r];\n    }\n    for (var r = 0; r < this.R; ++r) {\n      t[t.length] = this.j[r];\n    }\n    t[t.length] = __spreadArray([], __read(this.j[this.R]), false);\n    this.A = i;\n    this.R = t.length - 1;\n    for (var r = 0; r < i; ++r) {\n      t[t.length] = new Array(this.B);\n    }\n    this.j = t;\n    this.C = t.length;\n  };\n  Deque.prototype.T = function (t) {\n    var i = this.S + t + 1;\n    var r = i % this.B;\n    var e = r - 1;\n    var s = this.A + (i - r) / this.B;\n    if (r === 0) s -= 1;\n    s %= this.C;\n    if (e < 0) e += this.B;\n    return {\n      curNodeBucketIndex: s,\n      curNodePointerIndex: e\n    };\n  };\n  Deque.prototype.clear = function () {\n    this.j = [new Array(this.B)];\n    this.C = 1;\n    this.A = this.R = this.M = 0;\n    this.S = this.k = this.B >> 1;\n  };\n  Deque.prototype.begin = function () {\n    return new DequeIterator(0, this);\n  };\n  Deque.prototype.end = function () {\n    return new DequeIterator(this.M, this);\n  };\n  Deque.prototype.rBegin = function () {\n    return new DequeIterator(this.M - 1, this, 1);\n  };\n  Deque.prototype.rEnd = function () {\n    return new DequeIterator(-1, this, 1);\n  };\n  Deque.prototype.front = function () {\n    if (this.M === 0) return;\n    return this.j[this.A][this.S];\n  };\n  Deque.prototype.back = function () {\n    if (this.M === 0) return;\n    return this.j[this.R][this.k];\n  };\n  Deque.prototype.pushBack = function (t) {\n    if (this.M) {\n      if (this.k < this.B - 1) {\n        this.k += 1;\n      } else if (this.R < this.C - 1) {\n        this.R += 1;\n        this.k = 0;\n      } else {\n        this.R = 0;\n        this.k = 0;\n      }\n      if (this.R === this.A && this.k === this.S) this.O();\n    }\n    this.M += 1;\n    this.j[this.R][this.k] = t;\n    return this.M;\n  };\n  Deque.prototype.popBack = function () {\n    if (this.M === 0) return;\n    var t = this.j[this.R][this.k];\n    if (this.M !== 1) {\n      if (this.k > 0) {\n        this.k -= 1;\n      } else if (this.R > 0) {\n        this.R -= 1;\n        this.k = this.B - 1;\n      } else {\n        this.R = this.C - 1;\n        this.k = this.B - 1;\n      }\n    }\n    this.M -= 1;\n    return t;\n  };\n  Deque.prototype.pushFront = function (t) {\n    if (this.M) {\n      if (this.S > 0) {\n        this.S -= 1;\n      } else if (this.A > 0) {\n        this.A -= 1;\n        this.S = this.B - 1;\n      } else {\n        this.A = this.C - 1;\n        this.S = this.B - 1;\n      }\n      if (this.A === this.R && this.S === this.k) this.O();\n    }\n    this.M += 1;\n    this.j[this.A][this.S] = t;\n    return this.M;\n  };\n  Deque.prototype.popFront = function () {\n    if (this.M === 0) return;\n    var t = this.j[this.A][this.S];\n    if (this.M !== 1) {\n      if (this.S < this.B - 1) {\n        this.S += 1;\n      } else if (this.A < this.C - 1) {\n        this.A += 1;\n        this.S = 0;\n      } else {\n        this.A = 0;\n        this.S = 0;\n      }\n    }\n    this.M -= 1;\n    return t;\n  };\n  Deque.prototype.getElementByPos = function (t) {\n    if (t < 0 || t > this.M - 1) {\n      throw new RangeError();\n    }\n    var i = this.T(t),\n      r = i.curNodeBucketIndex,\n      e = i.curNodePointerIndex;\n    return this.j[r][e];\n  };\n  Deque.prototype.setElementByPos = function (t, i) {\n    if (t < 0 || t > this.M - 1) {\n      throw new RangeError();\n    }\n    var r = this.T(t),\n      e = r.curNodeBucketIndex,\n      s = r.curNodePointerIndex;\n    this.j[e][s] = i;\n  };\n  Deque.prototype.insert = function (t, i, r) {\n    if (r === void 0) {\n      r = 1;\n    }\n    if (t < 0 || t > this.M) {\n      throw new RangeError();\n    }\n    if (t === 0) {\n      while (r--) this.pushFront(i);\n    } else if (t === this.M) {\n      while (r--) this.pushBack(i);\n    } else {\n      var e = [];\n      for (var s = t; s < this.M; ++s) {\n        e.push(this.getElementByPos(s));\n      }\n      this.cut(t - 1);\n      for (var s = 0; s < r; ++s) this.pushBack(i);\n      for (var s = 0; s < e.length; ++s) this.pushBack(e[s]);\n    }\n    return this.M;\n  };\n  Deque.prototype.cut = function (t) {\n    if (t < 0) {\n      this.clear();\n      return 0;\n    }\n    var i = this.T(t),\n      r = i.curNodeBucketIndex,\n      e = i.curNodePointerIndex;\n    this.R = r;\n    this.k = e;\n    this.M = t + 1;\n    return this.M;\n  };\n  Deque.prototype.eraseElementByPos = function (t) {\n    if (t < 0 || t > this.M - 1) {\n      throw new RangeError();\n    }\n    if (t === 0) this.popFront();else if (t === this.M - 1) this.popBack();else {\n      var i = [];\n      for (var r = t + 1; r < this.M; ++r) {\n        i.push(this.getElementByPos(r));\n      }\n      this.cut(t);\n      this.popBack();\n      var e = this;\n      i.forEach(function (t) {\n        e.pushBack(t);\n      });\n    }\n    return this.M;\n  };\n  Deque.prototype.eraseElementByValue = function (t) {\n    if (this.M === 0) return 0;\n    var i = [];\n    for (var r = 0; r < this.M; ++r) {\n      var e = this.getElementByPos(r);\n      if (e !== t) i.push(e);\n    }\n    var s = i.length;\n    for (var r = 0; r < s; ++r) this.setElementByPos(r, i[r]);\n    return this.cut(s - 1);\n  };\n  Deque.prototype.eraseElementByIterator = function (t) {\n    var i = t.o;\n    this.eraseElementByPos(i);\n    t = t.next();\n    return t;\n  };\n  Deque.prototype.find = function (t) {\n    for (var i = 0; i < this.M; ++i) {\n      if (this.getElementByPos(i) === t) {\n        return new DequeIterator(i, this);\n      }\n    }\n    return this.end();\n  };\n  Deque.prototype.reverse = function () {\n    var t = 0;\n    var i = this.M - 1;\n    while (t < i) {\n      var r = this.getElementByPos(t);\n      this.setElementByPos(t, this.getElementByPos(i));\n      this.setElementByPos(i, r);\n      t += 1;\n      i -= 1;\n    }\n  };\n  Deque.prototype.unique = function () {\n    if (this.M <= 1) {\n      return this.M;\n    }\n    var t = 1;\n    var i = this.getElementByPos(0);\n    for (var r = 1; r < this.M; ++r) {\n      var e = this.getElementByPos(r);\n      if (e !== i) {\n        i = e;\n        this.setElementByPos(t++, e);\n      }\n    }\n    while (this.M > t) this.popBack();\n    return this.M;\n  };\n  Deque.prototype.sort = function (t) {\n    var i = [];\n    for (var r = 0; r < this.M; ++r) {\n      i.push(this.getElementByPos(r));\n    }\n    i.sort(t);\n    for (var r = 0; r < this.M; ++r) this.setElementByPos(r, i[r]);\n  };\n  Deque.prototype.shrinkToFit = function () {\n    if (this.M === 0) return;\n    var t = [];\n    this.forEach(function (i) {\n      t.push(i);\n    });\n    this.C = Math.max(Math.ceil(this.M / this.B), 1);\n    this.M = this.A = this.R = this.S = this.k = 0;\n    this.j = [];\n    for (var i = 0; i < this.C; ++i) {\n      this.j.push(new Array(this.B));\n    }\n    for (var i = 0; i < t.length; ++i) this.pushBack(t[i]);\n  };\n  Deque.prototype.forEach = function (t) {\n    for (var i = 0; i < this.M; ++i) {\n      t(this.getElementByPos(i), i, this);\n    }\n  };\n  Deque.prototype[Symbol.iterator] = function () {\n    return function () {\n      var t;\n      return __generator(this, function (i) {\n        switch (i.label) {\n          case 0:\n            t = 0;\n            i.label = 1;\n          case 1:\n            if (!(t < this.M)) return [3, 4];\n            return [4, this.getElementByPos(t)];\n          case 2:\n            i.sent();\n            i.label = 3;\n          case 3:\n            ++t;\n            return [3, 1];\n          case 4:\n            return [2];\n        }\n      });\n    }.bind(this)();\n  };\n  return Deque;\n}(SequentialContainer);\nexport default Deque;","map":{"version":3,"sources":["container/SequentialContainer/Deque.js","../../src/container/SequentialContainer/Deque.ts"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","throw","return","Symbol","iterator","n","v","step","op","done","value","pop","length","push","e","__read","o","m","i","r","ar","error","__spreadArray","to","from","pack","arguments","l","slice","concat","_this","_a","SequentialContainer","RandomIterator","container","size","RangeError","node","iteratorType","_super","DequeIterator","_node","_length","_bucketSize","_bucketNum","Math","max","ceil","_map","needBucketNum","_first","_last","_curFirst","_curLast","self","forEach","element","pushBack","Deque","newMap","addBucketNum","pos","offset","offsetRemainder","curNodePointerIndex","curNodeBucketIndex","_reAllocate","_getElementIndex","num","pushFront","arr","getElementByPos","cut","clear","popFront","popBack","self_1","el","setElementByPos","iter","eraseElementByPos","end","tmp","index","pre","cur","cmp","sort","callback","bind"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport SequentialContainer from './Base';\nimport { RandomIterator } from \"./Base/RandomIterator\";\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nimport $getContainerSize from \"../../utils/getContainerSize.macro\";\nvar DequeIterator = /** @class */ (function (_super) {\n    __extends(DequeIterator, _super);\n    function DequeIterator(node, container, iteratorType) {\n        var _this = _super.call(this, node, iteratorType) || this;\n        _this.container = container;\n        return _this;\n    }\n    DequeIterator.prototype.copy = function () {\n        return new DequeIterator(this._node, this.container, this.iteratorType);\n    };\n    return DequeIterator;\n}(RandomIterator));\nvar Deque = /** @class */ (function (_super) {\n    __extends(Deque, _super);\n    function Deque(container, _bucketSize) {\n        if (container === void 0) { container = []; }\n        if (_bucketSize === void 0) { _bucketSize = (1 << 12); }\n        var _this = _super.call(this) || this;\n        /**\n         * @internal\n         */\n        _this._first = 0;\n        /**\n         * @internal\n         */\n        _this._curFirst = 0;\n        /**\n         * @internal\n         */\n        _this._last = 0;\n        /**\n         * @internal\n         */\n        _this._curLast = 0;\n        /**\n         * @internal\n         */\n        _this._bucketNum = 0;\n        /**\n         * @internal\n         */\n        _this._map = [];\n        var _length = (function () {\n            if (typeof container.length === \"number\")\n                return container.length;\n            if (typeof container.size === \"number\")\n                return container.size;\n            if (typeof container.size === \"function\")\n                return container.size();\n            throw new TypeError(\"Cannot get the length or size of the container\");\n        })();\n        _this._bucketSize = _bucketSize;\n        _this._bucketNum = Math.max(Math.ceil(_length / _this._bucketSize), 1);\n        for (var i = 0; i < _this._bucketNum; ++i) {\n            _this._map.push(new Array(_this._bucketSize));\n        }\n        var needBucketNum = Math.ceil(_length / _this._bucketSize);\n        _this._first = _this._last = (_this._bucketNum >> 1) - (needBucketNum >> 1);\n        _this._curFirst = _this._curLast = (_this._bucketSize - _length % _this._bucketSize) >> 1;\n        var self = _this;\n        container.forEach(function (element) {\n            self.pushBack(element);\n        });\n        return _this;\n    }\n    /**\n     * @description Growth the Deque.\n     * @internal\n     */\n    Deque.prototype._reAllocate = function () {\n        var newMap = [];\n        var addBucketNum = Math.max(this._bucketNum >> 1, 1);\n        for (var i = 0; i < addBucketNum; ++i) {\n            newMap[i] = new Array(this._bucketSize);\n        }\n        for (var i = this._first; i < this._bucketNum; ++i) {\n            newMap[newMap.length] = this._map[i];\n        }\n        for (var i = 0; i < this._last; ++i) {\n            newMap[newMap.length] = this._map[i];\n        }\n        newMap[newMap.length] = __spreadArray([], __read(this._map[this._last]), false);\n        this._first = addBucketNum;\n        this._last = newMap.length - 1;\n        for (var i = 0; i < addBucketNum; ++i) {\n            newMap[newMap.length] = new Array(this._bucketSize);\n        }\n        this._map = newMap;\n        this._bucketNum = newMap.length;\n    };\n    /**\n     * @description Get the bucket position of the element and the pointer position by index.\n     * @param pos - The element's index.\n     * @internal\n     */\n    Deque.prototype._getElementIndex = function (pos) {\n        var offset = this._curFirst + pos + 1;\n        var offsetRemainder = offset % this._bucketSize;\n        var curNodePointerIndex = offsetRemainder - 1;\n        var curNodeBucketIndex = this._first + (offset - offsetRemainder) / this._bucketSize;\n        if (offsetRemainder === 0)\n            curNodeBucketIndex -= 1;\n        curNodeBucketIndex %= this._bucketNum;\n        if (curNodePointerIndex < 0)\n            curNodePointerIndex += this._bucketSize;\n        return { curNodeBucketIndex: curNodeBucketIndex, curNodePointerIndex: curNodePointerIndex };\n    };\n    Deque.prototype.clear = function () {\n        this._map = [new Array(this._bucketSize)];\n        this._bucketNum = 1;\n        this._first = this._last = this._length = 0;\n        this._curFirst = this._curLast = this._bucketSize >> 1;\n    };\n    Deque.prototype.begin = function () {\n        return new DequeIterator(0, this);\n    };\n    Deque.prototype.end = function () {\n        return new DequeIterator(this._length, this);\n    };\n    Deque.prototype.rBegin = function () {\n        return new DequeIterator(this._length - 1, this, 1 /* IteratorType.REVERSE */);\n    };\n    Deque.prototype.rEnd = function () {\n        return new DequeIterator(-1, this, 1 /* IteratorType.REVERSE */);\n    };\n    Deque.prototype.front = function () {\n        if (this._length === 0)\n            return;\n        return this._map[this._first][this._curFirst];\n    };\n    Deque.prototype.back = function () {\n        if (this._length === 0)\n            return;\n        return this._map[this._last][this._curLast];\n    };\n    Deque.prototype.pushBack = function (element) {\n        if (this._length) {\n            if (this._curLast < this._bucketSize - 1) {\n                this._curLast += 1;\n            }\n            else if (this._last < this._bucketNum - 1) {\n                this._last += 1;\n                this._curLast = 0;\n            }\n            else {\n                this._last = 0;\n                this._curLast = 0;\n            }\n            if (this._last === this._first &&\n                this._curLast === this._curFirst)\n                this._reAllocate();\n        }\n        this._length += 1;\n        this._map[this._last][this._curLast] = element;\n        return this._length;\n    };\n    Deque.prototype.popBack = function () {\n        if (this._length === 0)\n            return;\n        var value = this._map[this._last][this._curLast];\n        if (this._length !== 1) {\n            if (this._curLast > 0) {\n                this._curLast -= 1;\n            }\n            else if (this._last > 0) {\n                this._last -= 1;\n                this._curLast = this._bucketSize - 1;\n            }\n            else {\n                this._last = this._bucketNum - 1;\n                this._curLast = this._bucketSize - 1;\n            }\n        }\n        this._length -= 1;\n        return value;\n    };\n    /**\n     * @description Push the element to the front.\n     * @param element - The element you want to push.\n     * @returns The size of queue after pushing.\n     */\n    Deque.prototype.pushFront = function (element) {\n        if (this._length) {\n            if (this._curFirst > 0) {\n                this._curFirst -= 1;\n            }\n            else if (this._first > 0) {\n                this._first -= 1;\n                this._curFirst = this._bucketSize - 1;\n            }\n            else {\n                this._first = this._bucketNum - 1;\n                this._curFirst = this._bucketSize - 1;\n            }\n            if (this._first === this._last &&\n                this._curFirst === this._curLast)\n                this._reAllocate();\n        }\n        this._length += 1;\n        this._map[this._first][this._curFirst] = element;\n        return this._length;\n    };\n    /**\n     * @description Remove the _first element.\n     * @returns The element you popped.\n     */\n    Deque.prototype.popFront = function () {\n        if (this._length === 0)\n            return;\n        var value = this._map[this._first][this._curFirst];\n        if (this._length !== 1) {\n            if (this._curFirst < this._bucketSize - 1) {\n                this._curFirst += 1;\n            }\n            else if (this._first < this._bucketNum - 1) {\n                this._first += 1;\n                this._curFirst = 0;\n            }\n            else {\n                this._first = 0;\n                this._curFirst = 0;\n            }\n        }\n        this._length -= 1;\n        return value;\n    };\n    Deque.prototype.getElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var _a = this._getElementIndex(pos), curNodeBucketIndex = _a.curNodeBucketIndex, curNodePointerIndex = _a.curNodePointerIndex;\n        return this._map[curNodeBucketIndex][curNodePointerIndex];\n    };\n    Deque.prototype.setElementByPos = function (pos, element) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var _a = this._getElementIndex(pos), curNodeBucketIndex = _a.curNodeBucketIndex, curNodePointerIndex = _a.curNodePointerIndex;\n        this._map[curNodeBucketIndex][curNodePointerIndex] = element;\n    };\n    Deque.prototype.insert = function (pos, element, num) {\n        if (num === void 0) { num = 1; }\n        if (pos < 0 || pos > this._length) {\n            throw new RangeError();\n        }\n        if (pos === 0) {\n            while (num--)\n                this.pushFront(element);\n        }\n        else if (pos === this._length) {\n            while (num--)\n                this.pushBack(element);\n        }\n        else {\n            var arr = [];\n            for (var i = pos; i < this._length; ++i) {\n                arr.push(this.getElementByPos(i));\n            }\n            this.cut(pos - 1);\n            for (var i = 0; i < num; ++i)\n                this.pushBack(element);\n            for (var i = 0; i < arr.length; ++i)\n                this.pushBack(arr[i]);\n        }\n        return this._length;\n    };\n    /**\n     * @description Remove all elements after the specified position (excluding the specified position).\n     * @param pos - The previous position of the first removed element.\n     * @returns The size of the container after cutting.\n     * @example\n     * deque.cut(1); // Then deque's size will be 2. deque -> [0, 1]\n     */\n    Deque.prototype.cut = function (pos) {\n        if (pos < 0) {\n            this.clear();\n            return 0;\n        }\n        var _a = this._getElementIndex(pos), curNodeBucketIndex = _a.curNodeBucketIndex, curNodePointerIndex = _a.curNodePointerIndex;\n        this._last = curNodeBucketIndex;\n        this._curLast = curNodePointerIndex;\n        this._length = pos + 1;\n        return this._length;\n    };\n    Deque.prototype.eraseElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        if (pos === 0)\n            this.popFront();\n        else if (pos === this._length - 1)\n            this.popBack();\n        else {\n            var arr = [];\n            for (var i = pos + 1; i < this._length; ++i) {\n                arr.push(this.getElementByPos(i));\n            }\n            this.cut(pos);\n            this.popBack();\n            var self_1 = this;\n            arr.forEach(function (el) {\n                self_1.pushBack(el);\n            });\n        }\n        return this._length;\n    };\n    Deque.prototype.eraseElementByValue = function (value) {\n        if (this._length === 0)\n            return 0;\n        var arr = [];\n        for (var i = 0; i < this._length; ++i) {\n            var element = this.getElementByPos(i);\n            if (element !== value)\n                arr.push(element);\n        }\n        var _length = arr.length;\n        for (var i = 0; i < _length; ++i)\n            this.setElementByPos(i, arr[i]);\n        return this.cut(_length - 1);\n    };\n    Deque.prototype.eraseElementByIterator = function (iter) {\n        var _node = iter._node;\n        this.eraseElementByPos(_node);\n        iter = iter.next();\n        return iter;\n    };\n    Deque.prototype.find = function (element) {\n        for (var i = 0; i < this._length; ++i) {\n            if (this.getElementByPos(i) === element) {\n                return new DequeIterator(i, this);\n            }\n        }\n        return this.end();\n    };\n    Deque.prototype.reverse = function () {\n        var l = 0;\n        var r = this._length - 1;\n        while (l < r) {\n            var tmp = this.getElementByPos(l);\n            this.setElementByPos(l, this.getElementByPos(r));\n            this.setElementByPos(r, tmp);\n            l += 1;\n            r -= 1;\n        }\n    };\n    Deque.prototype.unique = function () {\n        if (this._length <= 1) {\n            return this._length;\n        }\n        var index = 1;\n        var pre = this.getElementByPos(0);\n        for (var i = 1; i < this._length; ++i) {\n            var cur = this.getElementByPos(i);\n            if (cur !== pre) {\n                pre = cur;\n                this.setElementByPos(index++, cur);\n            }\n        }\n        while (this._length > index)\n            this.popBack();\n        return this._length;\n    };\n    Deque.prototype.sort = function (cmp) {\n        var arr = [];\n        for (var i = 0; i < this._length; ++i) {\n            arr.push(this.getElementByPos(i));\n        }\n        arr.sort(cmp);\n        for (var i = 0; i < this._length; ++i)\n            this.setElementByPos(i, arr[i]);\n    };\n    /**\n     * @description Remove as much useless space as possible.\n     */\n    Deque.prototype.shrinkToFit = function () {\n        if (this._length === 0)\n            return;\n        var arr = [];\n        this.forEach(function (el) {\n            arr.push(el);\n        });\n        this._bucketNum = Math.max(Math.ceil(this._length / this._bucketSize), 1);\n        this._length = this._first = this._last = this._curFirst = this._curLast = 0;\n        this._map = [];\n        for (var i = 0; i < this._bucketNum; ++i) {\n            this._map.push(new Array(this._bucketSize));\n        }\n        for (var i = 0; i < arr.length; ++i)\n            this.pushBack(arr[i]);\n    };\n    Deque.prototype.forEach = function (callback) {\n        for (var i = 0; i < this._length; ++i) {\n            callback(this.getElementByPos(i), i, this);\n        }\n    };\n    Deque.prototype[Symbol.iterator] = function () {\n        return function () {\n            var i;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        i = 0;\n                        _a.label = 1;\n                    case 1:\n                        if (!(i < this._length)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.getElementByPos(i)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        ++i;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }.bind(this)();\n    };\n    return Deque;\n}(SequentialContainer));\nexport default Deque;\n","import SequentialContainer from './Base';\nimport { IteratorType, initContainer } from '@/container/ContainerBase';\nimport { RandomIterator } from '@/container/SequentialContainer/Base/RandomIterator';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport $getContainerSize from '@/utils/getContainerSize.macro';\n\nclass DequeIterator<T> extends RandomIterator<T> {\n  readonly container: Deque<T>;\n  constructor(node: number, container: Deque<T>, iteratorType?: IteratorType) {\n    super(node, iteratorType);\n    this.container = container;\n  }\n  copy() {\n    return new DequeIterator<T>(this._node, this.container, this.iteratorType);\n  }\n  // @ts-ignore\n  equals(iter: DequeIterator<T>): boolean;\n}\n\nexport type { DequeIterator };\n\nclass Deque<T> extends SequentialContainer<T> {\n  /**\n   * @internal\n   */\n  private _first = 0;\n  /**\n   * @internal\n   */\n  private _curFirst = 0;\n  /**\n   * @internal\n   */\n  private _last = 0;\n  /**\n   * @internal\n   */\n  private _curLast = 0;\n  /**\n   * @internal\n   */\n  private _bucketNum = 0;\n  /**\n   * @internal\n   */\n  private readonly _bucketSize: number;\n  /**\n   * @internal\n   */\n  private _map: T[][] = [];\n  constructor(container: initContainer<T> = [], _bucketSize = (1 << 12)) {\n    super();\n    const _length = $getContainerSize!(container);\n    this._bucketSize = _bucketSize;\n    this._bucketNum = Math.max(Math.ceil(_length / this._bucketSize), 1);\n    for (let i = 0; i < this._bucketNum; ++i) {\n      this._map.push(new Array(this._bucketSize));\n    }\n    const needBucketNum = Math.ceil(_length / this._bucketSize);\n    this._first = this._last = (this._bucketNum >> 1) - (needBucketNum >> 1);\n    this._curFirst = this._curLast = (this._bucketSize - _length % this._bucketSize) >> 1;\n    const self = this;\n    container.forEach(function (element) {\n      self.pushBack(element);\n    });\n  }\n  /**\n   * @description Growth the Deque.\n   * @internal\n   */\n  private _reAllocate() {\n    const newMap = [];\n    const addBucketNum = Math.max(this._bucketNum >> 1, 1);\n    for (let i = 0; i < addBucketNum; ++i) {\n      newMap[i] = new Array(this._bucketSize);\n    }\n    for (let i = this._first; i < this._bucketNum; ++i) {\n      newMap[newMap.length] = this._map[i];\n    }\n    for (let i = 0; i < this._last; ++i) {\n      newMap[newMap.length] = this._map[i];\n    }\n    newMap[newMap.length] = [...this._map[this._last]];\n    this._first = addBucketNum;\n    this._last = newMap.length - 1;\n    for (let i = 0; i < addBucketNum; ++i) {\n      newMap[newMap.length] = new Array(this._bucketSize);\n    }\n    this._map = newMap;\n    this._bucketNum = newMap.length;\n  }\n  /**\n   * @description Get the bucket position of the element and the pointer position by index.\n   * @param pos - The element's index.\n   * @internal\n   */\n  private _getElementIndex(pos: number) {\n    const offset = this._curFirst + pos + 1;\n    const offsetRemainder = offset % this._bucketSize;\n    let curNodePointerIndex = offsetRemainder - 1;\n    let curNodeBucketIndex = this._first + (offset - offsetRemainder) / this._bucketSize;\n    if (offsetRemainder === 0) curNodeBucketIndex -= 1;\n    curNodeBucketIndex %= this._bucketNum;\n    if (curNodePointerIndex < 0) curNodePointerIndex += this._bucketSize;\n    return { curNodeBucketIndex, curNodePointerIndex };\n  }\n  clear() {\n    this._map = [new Array(this._bucketSize)];\n    this._bucketNum = 1;\n    this._first = this._last = this._length = 0;\n    this._curFirst = this._curLast = this._bucketSize >> 1;\n  }\n  begin() {\n    return new DequeIterator<T>(0, this);\n  }\n  end() {\n    return new DequeIterator<T>(this._length, this);\n  }\n  rBegin() {\n    return new DequeIterator<T>(this._length - 1, this, IteratorType.REVERSE);\n  }\n  rEnd() {\n    return new DequeIterator<T>(-1, this, IteratorType.REVERSE);\n  }\n  front(): T | undefined {\n    if (this._length === 0) return;\n    return this._map[this._first][this._curFirst];\n  }\n  back(): T | undefined {\n    if (this._length === 0) return;\n    return this._map[this._last][this._curLast];\n  }\n  pushBack(element: T) {\n    if (this._length) {\n      if (this._curLast < this._bucketSize - 1) {\n        this._curLast += 1;\n      } else if (this._last < this._bucketNum - 1) {\n        this._last += 1;\n        this._curLast = 0;\n      } else {\n        this._last = 0;\n        this._curLast = 0;\n      }\n      if (\n        this._last === this._first &&\n        this._curLast === this._curFirst\n      ) this._reAllocate();\n    }\n    this._length += 1;\n    this._map[this._last][this._curLast] = element;\n    return this._length;\n  }\n  popBack() {\n    if (this._length === 0) return;\n    const value = this._map[this._last][this._curLast];\n    if (this._length !== 1) {\n      if (this._curLast > 0) {\n        this._curLast -= 1;\n      } else if (this._last > 0) {\n        this._last -= 1;\n        this._curLast = this._bucketSize - 1;\n      } else {\n        this._last = this._bucketNum - 1;\n        this._curLast = this._bucketSize - 1;\n      }\n    }\n    this._length -= 1;\n    return value;\n  }\n  /**\n   * @description Push the element to the front.\n   * @param element - The element you want to push.\n   * @returns The size of queue after pushing.\n   */\n  pushFront(element: T) {\n    if (this._length) {\n      if (this._curFirst > 0) {\n        this._curFirst -= 1;\n      } else if (this._first > 0) {\n        this._first -= 1;\n        this._curFirst = this._bucketSize - 1;\n      } else {\n        this._first = this._bucketNum - 1;\n        this._curFirst = this._bucketSize - 1;\n      }\n      if (\n        this._first === this._last &&\n        this._curFirst === this._curLast\n      ) this._reAllocate();\n    }\n    this._length += 1;\n    this._map[this._first][this._curFirst] = element;\n    return this._length;\n  }\n  /**\n   * @description Remove the _first element.\n   * @returns The element you popped.\n   */\n  popFront() {\n    if (this._length === 0) return;\n    const value = this._map[this._first][this._curFirst];\n    if (this._length !== 1) {\n      if (this._curFirst < this._bucketSize - 1) {\n        this._curFirst += 1;\n      } else if (this._first < this._bucketNum - 1) {\n        this._first += 1;\n        this._curFirst = 0;\n      } else {\n        this._first = 0;\n        this._curFirst = 0;\n      }\n    }\n    this._length -= 1;\n    return value;\n  }\n  getElementByPos(pos: number): T {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    const {\n      curNodeBucketIndex,\n      curNodePointerIndex\n    } = this._getElementIndex(pos);\n    return this._map[curNodeBucketIndex][curNodePointerIndex]!;\n  }\n  setElementByPos(pos: number, element: T) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    const {\n      curNodeBucketIndex,\n      curNodePointerIndex\n    } = this._getElementIndex(pos);\n    this._map[curNodeBucketIndex][curNodePointerIndex] = element;\n  }\n  insert(pos: number, element: T, num = 1) {\n    $checkWithinAccessParams!(pos, 0, this._length);\n    if (pos === 0) {\n      while (num--) this.pushFront(element);\n    } else if (pos === this._length) {\n      while (num--) this.pushBack(element);\n    } else {\n      const arr: T[] = [];\n      for (let i = pos; i < this._length; ++i) {\n        arr.push(this.getElementByPos(i));\n      }\n      this.cut(pos - 1);\n      for (let i = 0; i < num; ++i) this.pushBack(element);\n      for (let i = 0; i < arr.length; ++i) this.pushBack(arr[i]);\n    }\n    return this._length;\n  }\n  /**\n   * @description Remove all elements after the specified position (excluding the specified position).\n   * @param pos - The previous position of the first removed element.\n   * @returns The size of the container after cutting.\n   * @example\n   * deque.cut(1); // Then deque's size will be 2. deque -> [0, 1]\n   */\n  cut(pos: number) {\n    if (pos < 0) {\n      this.clear();\n      return 0;\n    }\n    const {\n      curNodeBucketIndex,\n      curNodePointerIndex\n    } = this._getElementIndex(pos);\n    this._last = curNodeBucketIndex;\n    this._curLast = curNodePointerIndex;\n    this._length = pos + 1;\n    return this._length;\n  }\n  eraseElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    if (pos === 0) this.popFront();\n    else if (pos === this._length - 1) this.popBack();\n    else {\n      const arr = [];\n      for (let i = pos + 1; i < this._length; ++i) {\n        arr.push(this.getElementByPos(i));\n      }\n      this.cut(pos);\n      this.popBack();\n      const self = this;\n      arr.forEach(function (el) {\n        self.pushBack(el);\n      });\n    }\n    return this._length;\n  }\n  eraseElementByValue(value: T) {\n    if (this._length === 0) return 0;\n    const arr: T[] = [];\n    for (let i = 0; i < this._length; ++i) {\n      const element = this.getElementByPos(i);\n      if (element !== value) arr.push(element);\n    }\n    const _length = arr.length;\n    for (let i = 0; i < _length; ++i) this.setElementByPos(i, arr[i]);\n    return this.cut(_length - 1);\n  }\n  eraseElementByIterator(iter: DequeIterator<T>) {\n    const _node = iter._node;\n    this.eraseElementByPos(_node);\n    iter = iter.next();\n    return iter;\n  }\n  find(element: T) {\n    for (let i = 0; i < this._length; ++i) {\n      if (this.getElementByPos(i) === element) {\n        return new DequeIterator<T>(i, this);\n      }\n    }\n    return this.end();\n  }\n  reverse() {\n    let l = 0; let r = this._length - 1;\n    while (l < r) {\n      const tmp = this.getElementByPos(l);\n      this.setElementByPos(l, this.getElementByPos(r));\n      this.setElementByPos(r, tmp);\n      l += 1;\n      r -= 1;\n    }\n  }\n  unique() {\n    if (this._length <= 1) {\n      return this._length;\n    }\n    let index = 1;\n    let pre = this.getElementByPos(0);\n    for (let i = 1; i < this._length; ++i) {\n      const cur = this.getElementByPos(i);\n      if (cur !== pre) {\n        pre = cur;\n        this.setElementByPos(index++, cur);\n      }\n    }\n    while (this._length > index) this.popBack();\n    return this._length;\n  }\n  sort(cmp?: (x: T, y: T) => number) {\n    const arr: T[] = [];\n    for (let i = 0; i < this._length; ++i) {\n      arr.push(this.getElementByPos(i));\n    }\n    arr.sort(cmp);\n    for (let i = 0; i < this._length; ++i) this.setElementByPos(i, arr[i]);\n  }\n  /**\n   * @description Remove as much useless space as possible.\n   */\n  shrinkToFit() {\n    if (this._length === 0) return;\n    const arr: T[] = [];\n    this.forEach(function (el) {\n      arr.push(el);\n    });\n    this._bucketNum = Math.max(Math.ceil(this._length / this._bucketSize), 1);\n    this._length = this._first = this._last = this._curFirst = this._curLast = 0;\n    this._map = [];\n    for (let i = 0; i < this._bucketNum; ++i) {\n      this._map.push(new Array(this._bucketSize));\n    }\n    for (let i = 0; i < arr.length; ++i) this.pushBack(arr[i]);\n  }\n  forEach(callback: (element: T, index: number, deque: Deque<T>) => void) {\n    for (let i = 0; i < this._length; ++i) {\n      callback(this.getElementByPos(i), i, this);\n    }\n  }\n  [Symbol.iterator]() {\n    return function * (this: Deque<T>) {\n      for (let i = 0; i < this._length; ++i) {\n        yield this.getElementByPos(i);\n      }\n    }.bind(this)();\n  }\n}\n\nexport default Deque;\n"]},"metadata":{},"sourceType":"module"}